###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.60.1.40026 for 8051             08/Jun/2018  08:43:44 #
# Copyright (C) 2004-2010 IAR Systems AB.                                     #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\win7\Desktop\ZStack传感器透明传输源程序V2 #
#                          .45-13(带回码2018-5-20)\Projects\GenericApp\Source #
#                          \B_LUX_V30.c                                       #
#    Command line       =  -f "C:\Users\win7\Desktop\ZStack传感器透明传输源程 #
#                          序V2.45-13(带回码2018-5-20)\Projects\GenericApp\CC #
#                          2530DB\..\..\..\COMPONENTS\Tools\CC2530DB\f8wRoute #
#                          r.cfg" (-DCPU32MHZ -DROOT=__near_func              #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                   #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\Tools\CC2530DB\f8wConfig.c #
#                          fg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR  #
#                          -DNWK_START_DELAY=1000 -DEXTENDED_JOINING_RANDOM_M #
#                          ASK=0x007F -DBEACON_REQUEST_DELAY=1000             #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Users\win7\Desktop\ZSta #
#                          ck传感器透明传输源程序V2.45-13(带回码2018-5-20)\Pr #
#                          ojects\GenericApp\Source\B_LUX_V30.c" -D ZTOOL_P1  #
#                          -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC -D        #
#                          xNV_RESTORE -D SERIAL_SUPPORTED=DEBUG -D           #
#                          SENSOR_TYPE=0X31 -D CHANLIST_C_R_E=25 -D           #
#                          ZDAPP_CONFIG_PAN_ID=0x0004 -D                      #
#                          ZigBee_C_R_E_Engineering -D ZigBee_C_R_E_IEEE -D   #
#                          xSENSOR_TYPE_R_E=0X01 -lC                          #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\Router\List\" -lA "C:\Users\win7\Desktop\ZStac #
#                          k传感器透明传输源程序V2.45-13(带回码2018-5-20)\Pro #
#                          jects\GenericApp\CC2530DB\Router\List\"            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\Router\Obj\" -e --require_prototypes --debug   #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\Users\win7\Desktop\ZSt #
#                          ack传感器透明传输源程序V2.45-13(带回码2018-5-20)\P #
#                          rojects\GenericApp\CC2530DB\" -I                   #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\SOURCE\" -I "C:\Users\win7\Desktop\ZStack传 #
#                          感器透明传输源程序V2.45-13(带回码2018-5-20)\Projec #
#                          ts\GenericApp\CC2530DB\..\..\..\COMPONENTS\ZMAIN\T #
#                          I2530DB\" -I "C:\Users\win7\Desktop\ZStack传感器透 #
#                          明传输源程序V2.45-13(带回码2018-5-20)\Projects\Gen #
#                          ericApp\CC2530DB\..\..\..\COMPONENTS\MT\" -I       #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\HAL\INCLUDE\" -I           #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\" -I   #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\" -I        #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\OSAL\INCLUDE\" -I          #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\AF\" -I              #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\NWK\" -I             #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\SEC\" -I             #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\SAPI\" -I            #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\SYS\" -I             #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\ZDO\" -I             #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\ZMAC\F8W\" -I              #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\ZMAC\" -I                  #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\SERVICES\SADDR\" -I        #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\SERVICES\SDATA\" -I        #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\INCLUDE\" -I           #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\" -I        #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\" -I   #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE #
#                          _CHIP\" -I "C:\Program Files (x86)\IAR             #
#                          Systems\Embedded Workbench 5.4\8051\INC\" -I       #
#                          "C:\Program Files (x86)\IAR Systems\Embedded       #
#                          Workbench 5.4\8051\INC\CLIB\" -Ohz                 #
#    List file          =  C:\Users\win7\Desktop\ZStack传感器透明传输源程序V2 #
#                          .45-13(带回码2018-5-20)\Projects\GenericApp\CC2530 #
#                          DB\Router\List\B_LUX_V30.lst                       #
#    Object file        =  C:\Users\win7\Desktop\ZStack传感器透明传输源程序V2 #
#                          .45-13(带回码2018-5-20)\Projects\GenericApp\CC2530 #
#                          DB\Router\Obj\B_LUX_V30.r51                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\win7\Desktop\ZStack传感器透明传输源程序V2.45-13(带回码2018-5-20)\Projects\GenericApp\Source\B_LUX_V30.c
      1          //***************************************
      2          // B_LUX30_V30采集程序
      3          //****************************************
      4          #include "B_LUX_V30.h"

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1
      5          
      6          //uint8    m_BUF[129];                       //接收数据缓存区      	
      7          //uint32   m_dis_data;                       //变量
      8          
      9          /*---------------------------------------------------------------------
     10           功能描述: 延时纳秒 不同的工作环境,需要调整此函数
     11           参数说明: 无	
     12           函数返回: 无
     13           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     14          void B_LUX30_delay_nms(uint16 k)	
   \                     B_LUX30_delay_nms:
     15          {						
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     16            uint16 i,j;				
     17            for(i=0;i<k;i++)
   \   000000   7800         MOV     R0,#0x0
   \   000002   7900         MOV     R1,#0x0
   \   000004   8008         SJMP    ??B_LUX30_delay_nms_0
     18            {			
     19              for(j=0;j<6000;j++)			
   \                     ??B_LUX30_delay_nms_1:
   \   000006   E8           MOV     A,R0
   \   000007   2401         ADD     A,#0x1
   \   000009   08           INC     R0
   \   00000A   E9           MOV     A,R1
   \   00000B   3400         ADDC    A,#0x0
   \   00000D   F9           MOV     R1,A
   \                     ??B_LUX30_delay_nms_0:
   \   00000E   C3           CLR     C
   \   00000F   E8           MOV     A,R0
   \   000010   9A           SUBB    A,R2
   \   000011   E9           MOV     A,R1
   \   000012   9B           SUBB    A,R3
   \   000013   40F1         JC      ??B_LUX30_delay_nms_1
     20              {
     21                ;
     22              }
     23            }						
     24          }					
   \   000015   02....       LJMP    ?BRET
     25          
     26          /*---------------------------------------------------------------------
     27           功能描述: 延时5微秒  不同的工作环境,需要调整此函数
     28           参数说明: 无	
     29           函数返回: 无
     30           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     31          void B_LUX30_Delay5us()
   \                     B_LUX30_Delay5us:
     32          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     33            uint16 n = 50;
   \   000000   7832         MOV     R0,#0x32
   \   000002   7900         MOV     R1,#0x0
     34            
     35            while (n--);
   \                     ??B_LUX30_Delay5us_0:
   \   000004   E8           MOV     A,R0
   \   000005   FA           MOV     R2,A
   \   000006   E9           MOV     A,R1
   \   000007   FB           MOV     R3,A
   \   000008   74FF         MOV     A,#-0x1
   \   00000A   2A           ADD     A,R2
   \   00000B   18           DEC     R0
   \   00000C   74FF         MOV     A,#-0x1
   \   00000E   3B           ADDC    A,R3
   \   00000F   F9           MOV     R1,A
   \   000010   EA           MOV     A,R2
   \   000011   7001         JNZ     ??B_LUX30_Delay5us_1
   \   000013   EB           MOV     A,R3
   \                     ??B_LUX30_Delay5us_1:
   \   000014   70EE         JNZ     ??B_LUX30_Delay5us_0
     36          }
   \   000016   02....       LJMP    ?BRET
     37          
     38          /*---------------------------------------------------------------------
     39           功能描述: 延时5毫秒  不同的工作环境,需要调整此函数
     40           参数说明: 无	
     41           函数返回: 无
     42           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     43          void B_LUX30_Delay5ms()
   \                     B_LUX30_Delay5ms:
     44          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     45            uint16 n = 50000;
   \   000000   7850         MOV     R0,#0x50
   \   000002   79C3         MOV     R1,#-0x3d
     46            
     47            while (n--);
   \                     ??B_LUX30_Delay5ms_0:
   \   000004   E8           MOV     A,R0
   \   000005   FA           MOV     R2,A
   \   000006   E9           MOV     A,R1
   \   000007   FB           MOV     R3,A
   \   000008   74FF         MOV     A,#-0x1
   \   00000A   2A           ADD     A,R2
   \   00000B   18           DEC     R0
   \   00000C   74FF         MOV     A,#-0x1
   \   00000E   3B           ADDC    A,R3
   \   00000F   F9           MOV     R1,A
   \   000010   EA           MOV     A,R2
   \   000011   7001         JNZ     ??B_LUX30_Delay5ms_1
   \   000013   EB           MOV     A,R3
   \                     ??B_LUX30_Delay5ms_1:
   \   000014   70EE         JNZ     ??B_LUX30_Delay5ms_0
     48          }
   \   000016   02....       LJMP    ?BRET
     49          
     50          /*---------------------------------------------------------------------
     51           功能描述: 起始信号
     52           参数说明: 无	
     53           函数返回: 无
     54           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     55          void B_LUX30_Start()
   \                     B_LUX30_Start:
     56          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     57            B_LUX30_SDA0_H;                         //拉高数据线
   \   000004   D294         SETB    0x90.4
     58            B_LUX30_SCL0_H;                         //拉高时钟线
   \   000006   D293         SETB    0x90.3
     59            B_LUX30_Delay5us();                     //延时
   \   000008                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000008   12....       LCALL   ??B_LUX30_Delay5us?relay
     60            B_LUX30_SDA0_L;                         //产生下降沿
   \   00000B   C294         CLR     0x90.4
     61            B_LUX30_Delay5us();                     //延时
   \   00000D                ; Setup parameters for call to function B_LUX30_Delay5us
   \   00000D   12....       LCALL   ?Subroutine5 & 0xFFFF
     62            B_LUX30_SCL0_L;                         //拉低时钟线
     63          }
   \                     ??CrossCallReturnLabel_4:
   \   000010                REQUIRE ?Subroutine0
   \   000010                REQUIRE _A_P1
   \   000010                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ??B_LUX30_Delay5us?relay
   \   000003   C293         CLR     0x90.3
   \   000005   22           RET
     64          
     65          /*---------------------------------------------------------------------
     66           功能描述: 停止信号
     67           参数说明: 无	
     68           函数返回: 无
     69           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     70          void B_LUX30_Stop()
   \                     B_LUX30_Stop:
     71          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     72            B_LUX30_SDA0_L;                         //拉低数据线
   \   000004   C294         CLR     0x90.4
     73            B_LUX30_SCL0_H;                         //拉高时钟线
   \   000006   D293         SETB    0x90.3
     74            B_LUX30_Delay5us();                     //延时
   \   000008                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000008   12....       LCALL   ??B_LUX30_Delay5us?relay
     75            B_LUX30_SDA0_H;                         //产生上升沿
   \   00000B   D294         SETB    0x90.4
     76            B_LUX30_Delay5us();                     //延时
   \   00000D                ; Setup parameters for call to function B_LUX30_Delay5us
   \   00000D   12....       LCALL   ?Subroutine4 & 0xFFFF
     77            B_LUX30_SCL0_L;
     78            B_LUX30_Delay5us();
     79            
     80            B_LUX30_delay_nms(1000);                         //延时180ms
   \                     ??CrossCallReturnLabel_2:
   \   000010                ; Setup parameters for call to function B_LUX30_delay_nms
   \   000010   7AE8         MOV     R2,#-0x18
   \   000012   7B03         MOV     R3,#0x3
   \   000014   12....       LCALL   ??B_LUX30_delay_nms?relay
     81          }
   \   000017   80..         SJMP    ?Subroutine0
   \   000019                REQUIRE _A_P1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ?Subroutine5 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000003                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000003                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000003   12....       LCALL   ??B_LUX30_Delay5us?relay
   \   000006   22           RET
     82          
     83          /*---------------------------------------------------------------------
     84           功能描述: 发送应答信号
     85           参数说明: ack - 应答信号(0:ACK 1:NAK)
     86           函数返回: 无
     87           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     88          void B_LUX30_SendACK(uint8 ack)
   \                     B_LUX30_SendACK:
     89          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
     90            if (ack&0x01)	B_LUX30_SDA0_H;		//写应答信号
   \   000006   A2E0         MOV     C,0xE0 /* A   */.0
   \   000008   5004         JNC     ??B_LUX30_SendACK_0
   \   00000A   D294         SETB    0x90.4
   \   00000C   8002         SJMP    ??B_LUX30_SendACK_1
     91            else	B_LUX30_SDA0_L;
   \                     ??B_LUX30_SendACK_0:
   \   00000E   C294         CLR     0x90.4
     92            
     93            B_LUX30_SCL0_H;                         //拉高时钟线
   \                     ??B_LUX30_SendACK_1:
   \   000010   D293         SETB    0x90.3
     94            B_LUX30_Delay5us();                     //延时
   \   000012                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000012   12....       LCALL   ?Subroutine5 & 0xFFFF
     95            B_LUX30_SCL0_L;                         //拉低时钟线
     96            B_LUX30_SDA0_H;
   \                     ??CrossCallReturnLabel_5:
   \   000015   D294         SETB    0x90.4
     97            B_LUX30_Delay5us();                     //延时
   \   000017                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000017   12....       LCALL   ??B_LUX30_Delay5us?relay
     98          }
   \   00001A   80..         SJMP    ??Subroutine6_0
   \   00001C                REQUIRE _A_P1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine6_0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
     99          
    100          /*---------------------------------------------------------------------
    101           功能描述: 接收应答信号
    102           参数说明: 无
    103           函数返回: 返回应答信号
    104           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   F9           MOV     R1,A
   \   000001                REQUIRE ??Subroutine6_0
   \   000001                ; // Fall through to label ??Subroutine6_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    105          uint8 B_LUX30_RecvACK()
   \                     B_LUX30_RecvACK:
    106          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    107            uint8 CY = 0x00;
    108            B_LUX30_SDA0_H;
   \   000005   D294         SETB    0x90.4
    109            
    110            B_LUX30_SDA0_I;
   \   000007   53FEEF       ANL     0xfe,#0xef
    111            
    112            B_LUX30_SCL0_H;                         //拉高时钟线
   \   00000A   D293         SETB    0x90.3
    113            B_LUX30_Delay5us();                     //延时
   \   00000C                ; Setup parameters for call to function B_LUX30_Delay5us
   \   00000C   12....       LCALL   ??B_LUX30_Delay5us?relay
    114            
    115            
    116            CY |= B_LUX30_SDA0_DAT;                 //读应答信号
   \   00000F   E590         MOV     A,0x90
   \   000011   FE           MOV     R6,A
    117            
    118            B_LUX30_Delay5us();                     //延时
   \   000012                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000012   12....       LCALL   ?Subroutine5 & 0xFFFF
    119            
    120            B_LUX30_SCL0_L;                         //拉低时钟线
    121            
    122            B_LUX30_SDA0_O;
   \                     ??CrossCallReturnLabel_6:
   \   000015   43FE10       ORL     0xfe,#0x10
    123            
    124            return CY;
   \   000018   EE           MOV     A,R6
   \   000019   A2E4         MOV     C,0xE0 /* A   */.4
   \   00001B   E4           CLR     A
   \   00001C   92E0         MOV     0xE0 /* A   */.0,C
   \   00001E   80..         SJMP    ?Subroutine1
   \   000020                REQUIRE _A_P1
   \   000020                REQUIRE P1DIR
    125          }
    126          
    127          /*---------------------------------------------------------------------
    128           功能描述: 向IIC总线发送一个字节数据
    129           参数说明: dat - 写字节
    130           函数返回: 无
    131           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    132          void B_LUX30_SendByte(uint8 dat)
   \                     B_LUX30_SendByte:
    133          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
    134            uint8 i;
    135            
    136            for (i=0; i<8; i++)         			//8位计数器
   \   000007   7E08         MOV     R6,#0x8
    137            {
    138              if (dat&0x80)	B_LUX30_SDA0_H;
   \                     ??B_LUX30_SendByte_0:
   \   000009   EF           MOV     A,R7
   \   00000A   A2E7         MOV     C,0xE0 /* A   */.7
   \   00000C   5004         JNC     ??B_LUX30_SendByte_1
   \   00000E   D294         SETB    0x90.4
   \   000010   8002         SJMP    ??B_LUX30_SendByte_2
    139              else	B_LUX30_SDA0_L;                   //送数据口
   \                     ??B_LUX30_SendByte_1:
   \   000012   C294         CLR     0x90.4
    140              
    141              B_LUX30_Delay5us();             		//延时
   \                     ??B_LUX30_SendByte_2:
   \   000014                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000014   12....       LCALL   ??B_LUX30_Delay5us?relay
    142              B_LUX30_SCL0_H;                		//拉高时钟线
   \   000017   D293         SETB    0x90.3
    143              B_LUX30_Delay5us();             		//延时
   \   000019                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000019   12....       LCALL   ?Subroutine4 & 0xFFFF
    144              B_LUX30_SCL0_L;                		//拉低时钟线
    145              B_LUX30_Delay5us();             		//延时
    146              dat <<= 1;              			//移出数据的最高位
   \                     ??CrossCallReturnLabel_3:
   \   00001C   EF           MOV     A,R7
   \   00001D   C3           CLR     C
   \   00001E   33           RLC     A
   \   00001F   FF           MOV     R7,A
    147            }
   \   000020   1E           DEC     R6
   \   000021   EE           MOV     A,R6
   \   000022   70E5         JNZ     ??B_LUX30_SendByte_0
    148            
    149            B_LUX30_RecvACK();
   \   000024                ; Setup parameters for call to function B_LUX30_RecvACK
   \   000024   12....       LCALL   ??B_LUX30_RecvACK?relay
    150          }
   \   000027   80..         SJMP    ??Subroutine6_0
   \   000029                REQUIRE _A_P1
    151          
    152          /*---------------------------------------------------------------------
    153           功能描述: 从IIC总线接收一个字节数据
    154           参数说明: 无
    155           函数返回: 接收字节
    156           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    157          uint8 B_LUX30_RecvByte()
   \                     B_LUX30_RecvByte:
    158          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    159            uint8 i;
    160            uint8 dat = 0;
   \   000005   7E00         MOV     R6,#0x0
    161            B_LUX30_SDA0_I;
   \   000007   53FEEF       ANL     0xfe,#0xef
    162            
    163            B_LUX30_SDA0_H;                         //使能内部上拉,准备读取数据,
   \   00000A   D294         SETB    0x90.4
    164            for (i=0; i<8; i++)         	        //8位计数器
   \   00000C   7F08         MOV     R7,#0x8
    165            {
    166              dat <<= 1;
    167              B_LUX30_SCL0_H;                       //拉高时钟线
   \                     ??B_LUX30_RecvByte_0:
   \   00000E   D293         SETB    0x90.3
    168              B_LUX30_Delay5us();             	//延时
   \   000010                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000010   12....       LCALL   ??B_LUX30_Delay5us?relay
    169              dat |= B_LUX30_SDA0_DAT;              //读数据               
   \   000013   A294         MOV     C,0x90.4
   \   000015   E4           CLR     A
   \   000016   92E0         MOV     0xE0 /* A   */.0,C
   \   000018   C0E0         PUSH    A
   \   00001A   EE           MOV     A,R6
   \   00001B   C3           CLR     C
   \   00001C   33           RLC     A
   \   00001D   FA           MOV     R2,A
   \   00001E   D0E0         POP     A
   \   000020   4A           ORL     A,R2
   \   000021   FE           MOV     R6,A
    170              B_LUX30_SCL0_L;                       //拉低时钟线
   \   000022   C293         CLR     0x90.3
    171              B_LUX30_Delay5us();             	//延时
   \   000024                ; Setup parameters for call to function B_LUX30_Delay5us
   \   000024   12....       LCALL   ??B_LUX30_Delay5us?relay
    172              
    173          	
    174            }
   \   000027   1F           DEC     R7
   \   000028   EF           MOV     A,R7
   \   000029   70E3         JNZ     ??B_LUX30_RecvByte_0
    175            B_LUX30_SDA0_O;
   \   00002B   43FE10       ORL     0xfe,#0x10
    176            
    177            return dat;
   \   00002E   EE           MOV     A,R6
   \   00002F   02....       LJMP    ?Subroutine1 & 0xFFFF
   \   000032                REQUIRE _A_P1
   \   000032                REQUIRE P1DIR
    178          }
    179          
    180          /*---------------------------------------------------------------------
    181           功能描述: 写B_LUX30
    182           参数说明: REG_Address - 寄存器地址
    183           函数返回: 无
    184           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    185          void B_LUX30_Multiple_Write(uint8 REG_Address, uint8* vBuf, uint8 vLen)
   \                     B_LUX30_Multiple_Write:
    186          {
   \   000000   74F3         MOV     A,#-0xd
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 13
   \   000005                ; Auto size: 0
   \   000005   12....       LCALL   ?Subroutine3 & 0xFFFF
    187            uint8 i = 0;
    188             //---------------------------写程序
    189            B_LUX30_Start();                                  //起始信号
    190            B_LUX30_SendByte(B_LUX30_SlaveAddress+0);         //发送设备地址+读信号
    191            B_LUX30_SendByte(REG_Address);                    //写地址
    192            for (i=0; i<=vLen; i++)                           //循环写数据
   \                     ??CrossCallReturnLabel_0:
   \   000008   75..00       MOV     ?V0 + 3,#0x0
    193            {
    194              B_LUX30_SendByte(vBuf[i]);                      //写数据
   \                     ??B_LUX30_Multiple_Write_0:
   \   00000B                ; Setup parameters for call to function B_LUX30_SendByte
   \   00000B   85....       MOV     ?V0 + 0,?V0 + 3
   \   00000E   EE           MOV     A,R6
   \   00000F   25..         ADD     A,?V0 + 0
   \   000011   F582         MOV     DPL,A
   \   000013   EF           MOV     A,R7
   \   000014   3400         ADDC    A,#0x0
   \   000016   F583         MOV     DPH,A
   \   000018   E0           MOVX    A,@DPTR
   \   000019   F9           MOV     R1,A
   \   00001A   12....       LCALL   ??B_LUX30_SendByte?relay
    195            }
   \   00001D   05..         INC     ?V0 + 3
   \   00001F   E5..         MOV     A,?V0 + 4
   \   000021   C3           CLR     C
   \   000022   95..         SUBB    A,?V0 + 3
   \   000024   50E5         JNC     ??B_LUX30_Multiple_Write_0
    196            B_LUX30_Stop();                                   //停止信号
   \   000026                ; Setup parameters for call to function B_LUX30_Stop
   \   000026                REQUIRE ?Subroutine2
   \   000026                ; // Fall through to label ?Subroutine2
    197            //---------------------------
    198            
    199          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ??B_LUX30_Stop?relay
   \   000003   7F05         MOV     R7,#0x5
   \   000005   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   89..         MOV     ?V0 + 2,R1
   \   000002   EA           MOV     A,R2
   \   000003   FE           MOV     R6,A
   \   000004   EB           MOV     A,R3
   \   000005   FF           MOV     R7,A
   \   000006   8C..         MOV     ?V0 + 4,R4
   \   000008                ; Setup parameters for call to function B_LUX30_Start
   \   000008                ; Setup parameters for call to function B_LUX30_Start
   \   000008   12....       LCALL   ??B_LUX30_Start?relay
   \   00000B                ; Setup parameters for call to function B_LUX30_SendByte
   \   00000B                ; Setup parameters for call to function B_LUX30_SendByte
   \   00000B   7994         MOV     R1,#-0x6c
   \   00000D   12....       LCALL   ??B_LUX30_SendByte?relay
   \   000010                ; Setup parameters for call to function B_LUX30_SendByte
   \   000010                ; Setup parameters for call to function B_LUX30_SendByte
   \   000010   A9..         MOV     R1,?V0 + 2
   \   000012   12....       LCALL   ??B_LUX30_SendByte?relay
   \   000015   22           RET
    200          
    201          /*---------------------------------------------------------------------
    202           功能描述: 读B_LUX30
    203           参数说明: REG_Address - 寄存器地址
    204           函数返回: 无
    205           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    206          void B_LUX30_Multiple_read(uint8 REG_Address, uint8* vBuf, uint8 vLen)
   \                     B_LUX30_Multiple_read:
    207          {
   \   000000   74F3         MOV     A,#-0xd
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 13
   \   000005                ; Auto size: 0
   \   000005   12....       LCALL   ?Subroutine3 & 0xFFFF
    208            uint8 i = 0;
    209            //---------------------------读程序
    210            B_LUX30_Start();                                //起始信号
    211            B_LUX30_SendByte(B_LUX30_SlaveAddress+0);       //发送设备地址+读信号
    212            B_LUX30_SendByte(REG_Address);                  //从0x00地址开始读取光照值
    213           
    214            B_LUX30_Start();                                //起始信号
   \                     ??CrossCallReturnLabel_1:
   \   000008                ; Setup parameters for call to function B_LUX30_Start
   \   000008   12....       LCALL   ??B_LUX30_Start?relay
    215            B_LUX30_SendByte(B_LUX30_SlaveAddress+1);       //发送设备地址+读信号
   \   00000B                ; Setup parameters for call to function B_LUX30_SendByte
   \   00000B   7995         MOV     R1,#-0x6b
   \   00000D   12....       LCALL   ??B_LUX30_SendByte?relay
    216            B_LUX30_delay_nms(1);                           //延时180ms
   \   000010                ; Setup parameters for call to function B_LUX30_delay_nms
   \   000010   7A01         MOV     R2,#0x1
   \   000012   7B00         MOV     R3,#0x0
   \   000014   12....       LCALL   ??B_LUX30_delay_nms?relay
    217            for (i=vLen; i>0; i--)                            //连续读取4个地址数据，存储中BUF
   \   000017   85....       MOV     ?V0 + 3,?V0 + 4
   \   00001A   8007         SJMP    ??B_LUX30_Multiple_read_0
    218            {
    219              vBuf[i-1] = B_LUX30_RecvByte();                //BUF[0]存储0x32地址中的数据
    220              if (i == 1)
    221              {
    222                
    223                B_LUX30_SendACK(1);                         //最后一个数据需要回NOACK
    224              }
    225              else
    226              {		
    227                B_LUX30_SendACK(0);                         //回应ACK
   \                     ??B_LUX30_Multiple_read_1:
   \   00001C                ; Setup parameters for call to function B_LUX30_SendACK
   \   00001C   7900         MOV     R1,#0x0
   \                     ??B_LUX30_Multiple_read_2:
   \   00001E   12....       LCALL   ??B_LUX30_SendACK?relay
    228              }
   \   000021   15..         DEC     ?V0 + 3
   \                     ??B_LUX30_Multiple_read_0:
   \   000023   E5..         MOV     A,?V0 + 3
   \   000025   6028         JZ      ??B_LUX30_Multiple_read_3
   \   000027                ; Setup parameters for call to function B_LUX30_RecvByte
   \   000027   12....       LCALL   ??B_LUX30_RecvByte?relay
   \   00002A   E9           MOV     A,R1
   \   00002B   C0E0         PUSH    A
   \   00002D   85....       MOV     ?V0 + 0,?V0 + 3
   \   000030   EE           MOV     A,R6
   \   000031   25..         ADD     A,?V0 + 0
   \   000033   F8           MOV     R0,A
   \   000034   EF           MOV     A,R7
   \   000035   3400         ADDC    A,#0x0
   \   000037   F9           MOV     R1,A
   \   000038   74FF         MOV     A,#-0x1
   \   00003A   28           ADD     A,R0
   \   00003B   F582         MOV     DPL,A
   \   00003D   74FF         MOV     A,#-0x1
   \   00003F   39           ADDC    A,R1
   \   000040   F583         MOV     DPH,A
   \   000042   D0E0         POP     A
   \   000044   F0           MOVX    @DPTR,A
   \   000045   7401         MOV     A,#0x1
   \   000047   65..         XRL     A,?V0 + 3
   \   000049   70D1         JNZ     ??B_LUX30_Multiple_read_1
   \   00004B                ; Setup parameters for call to function B_LUX30_SendACK
   \   00004B   7901         MOV     R1,#0x1
   \   00004D   80CF         SJMP    ??B_LUX30_Multiple_read_2
    229            }
    230            B_LUX30_Stop();                                 //停止信号
   \                     ??B_LUX30_Multiple_read_3:
   \   00004F                ; Setup parameters for call to function B_LUX30_Stop
   \   00004F   80..         SJMP    ?Subroutine2
    231            
    232            //---------------------------
    233          }
    234          
    235          /*---------------------------------------------------------------------
    236           功能描述: 初始化光照传感器
    237           参数说明: 无
    238           函数返回: 无
    239           ---------------------------------------------------------------------*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    240          void B_LUX30_Init()
   \                     B_LUX30_Init:
    241          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    242            B_LUX30_SCL0_O;
   \   000000   43FE08       ORL     0xfe,#0x8
    243            B_LUX30_SDA0_O;
   \   000003   43FE10       ORL     0xfe,#0x10
    244            
    245          }
   \   000006   02....       LJMP    ?BRET
   \   000009                REQUIRE P1DIR

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_delay_nms?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_delay_nms

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_Delay5us?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_Delay5us

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_Delay5ms?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_Delay5ms

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_Start?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_Start

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_Stop?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_Stop

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_SendACK?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_SendACK

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_RecvACK?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_RecvACK

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_SendByte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_SendByte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_RecvByte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_RecvByte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_Multiple_Write?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_Multiple_Write

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_Multiple_read?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_Multiple_read

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??B_LUX30_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    B_LUX30_Init

   Maximum stack usage in bytes:

     Function               ISTACK PSTACK XSTACK
     --------               ------ ------ ------
     B_LUX30_Delay5ms           0      0      0
     B_LUX30_Delay5us           0      0      9
     B_LUX30_Init               0      0      0
     B_LUX30_Multiple_Write     0      0     13
       -> B_LUX30_Start         0      0     26
       -> B_LUX30_SendByte      0      0     26
       -> B_LUX30_SendByte      0      0     26
       -> B_LUX30_SendByte      0      0     26
       -> B_LUX30_Stop          0      0     26
     B_LUX30_Multiple_read      1      0     13
       -> B_LUX30_Start         0      0     26
       -> B_LUX30_SendByte      0      0     26
       -> B_LUX30_SendByte      0      0     26
       -> B_LUX30_Start         0      0     26
       -> B_LUX30_SendByte      0      0     26
       -> B_LUX30_delay_nms     0      0     26
       -> B_LUX30_SendACK       0      0     26
       -> B_LUX30_RecvByte      0      0     26
       -> B_LUX30_SendACK       0      0     26
       -> B_LUX30_Stop          0      0     26
     B_LUX30_RecvACK            0      0     18
       -> B_LUX30_Delay5us      0      0     18
       -> B_LUX30_Delay5us      0      0     18
     B_LUX30_RecvByte           1      0     22
       -> B_LUX30_Delay5us      0      0     18
       -> B_LUX30_Delay5us      0      0     18
     B_LUX30_SendACK            0      0     22
       -> B_LUX30_Delay5us      0      0     18
       -> B_LUX30_Delay5us      0      0     18
     B_LUX30_SendByte           0      0     22
       -> B_LUX30_Delay5us      0      0     18
       -> B_LUX30_Delay5us      0      0     18
       -> B_LUX30_Delay5us      0      0     18
       -> B_LUX30_RecvACK       0      0     18
     B_LUX30_Start              2      0     13
       -> B_LUX30_Delay5us      4      0      0
       -> B_LUX30_Delay5us      4      0      0
     B_LUX30_Stop               2      0     13
       -> B_LUX30_Delay5us      4      0      0
       -> B_LUX30_Delay5us      4      0      0
       -> B_LUX30_Delay5us      4      0      0
       -> B_LUX30_delay_nms     4      0      0
     B_LUX30_delay_nms          0      0     13


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _A_P1                             1
     P1DIR                             1
     B_LUX30_delay_nms                24
     B_LUX30_Delay5us                 25
     B_LUX30_Delay5ms                 25
     B_LUX30_Start                    16
     ?Subroutine0                      7
     ?Subroutine5                      6
     B_LUX30_Stop                     25
     ?Subroutine4                      7
     B_LUX30_SendACK                  28
     ??Subroutine6_0                   5
     ?Subroutine1                      1
     B_LUX30_RecvACK                  32
     B_LUX30_SendByte                 41
     B_LUX30_RecvByte                 50
     B_LUX30_Multiple_Write           38
     ?Subroutine2                      8
     ?Subroutine3                     22
     B_LUX30_Multiple_read            81
     B_LUX30_Init                      9
     ??B_LUX30_delay_nms?relay         6
     ??B_LUX30_Delay5us?relay          6
     ??B_LUX30_Delay5ms?relay          6
     ??B_LUX30_Start?relay             6
     ??B_LUX30_Stop?relay              6
     ??B_LUX30_SendACK?relay           6
     ??B_LUX30_RecvACK?relay           6
     ??B_LUX30_SendByte?relay          6
     ??B_LUX30_RecvByte?relay          6
     ??B_LUX30_Multiple_Write?relay    6
     ??B_LUX30_Multiple_read?relay     6
     ??B_LUX30_Init?relay              6

 
 450 bytes in segment BANKED_CODE
  72 bytes in segment BANK_RELAYS
   2 bytes in segment SFR_AN
 
 522 bytes of CODE memory
   0 bytes of DATA memory (+ 2 bytes shared)

Errors: none
Warnings: none
