###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.60.1.40026 for 8051             08/Jun/2018  08:43:39 #
# Copyright (C) 2004-2010 IAR Systems AB.                                     #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\win7\Desktop\ZStack传感器透明传输源程序V2 #
#                          .45-13(带回码2018-5-20)\Projects\GenericApp\Source #
#                          \18B20.c                                           #
#    Command line       =  -f "C:\Users\win7\Desktop\ZStack传感器透明传输源程 #
#                          序V2.45-13(带回码2018-5-20)\Projects\GenericApp\CC #
#                          2530DB\..\..\..\COMPONENTS\Tools\CC2530DB\f8wRoute #
#                          r.cfg" (-DCPU32MHZ -DROOT=__near_func              #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                   #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\Tools\CC2530DB\f8wConfig.c #
#                          fg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR  #
#                          -DNWK_START_DELAY=1000 -DEXTENDED_JOINING_RANDOM_M #
#                          ASK=0x007F -DBEACON_REQUEST_DELAY=1000             #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Users\win7\Desktop\ZSta #
#                          ck传感器透明传输源程序V2.45-13(带回码2018-5-20)\Pr #
#                          ojects\GenericApp\Source\18B20.c" -D ZTOOL_P1 -D   #
#                          MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC -D           #
#                          xNV_RESTORE -D SERIAL_SUPPORTED=DEBUG -D           #
#                          SENSOR_TYPE=0X31 -D CHANLIST_C_R_E=25 -D           #
#                          ZDAPP_CONFIG_PAN_ID=0x0004 -D                      #
#                          ZigBee_C_R_E_Engineering -D ZigBee_C_R_E_IEEE -D   #
#                          xSENSOR_TYPE_R_E=0X01 -lC                          #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\Router\List\" -lA "C:\Users\win7\Desktop\ZStac #
#                          k传感器透明传输源程序V2.45-13(带回码2018-5-20)\Pro #
#                          jects\GenericApp\CC2530DB\Router\List\"            #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\Router\Obj\" -e --require_prototypes --debug   #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\Users\win7\Desktop\ZSt #
#                          ack传感器透明传输源程序V2.45-13(带回码2018-5-20)\P #
#                          rojects\GenericApp\CC2530DB\" -I                   #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\SOURCE\" -I "C:\Users\win7\Desktop\ZStack传 #
#                          感器透明传输源程序V2.45-13(带回码2018-5-20)\Projec #
#                          ts\GenericApp\CC2530DB\..\..\..\COMPONENTS\ZMAIN\T #
#                          I2530DB\" -I "C:\Users\win7\Desktop\ZStack传感器透 #
#                          明传输源程序V2.45-13(带回码2018-5-20)\Projects\Gen #
#                          ericApp\CC2530DB\..\..\..\COMPONENTS\MT\" -I       #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\HAL\INCLUDE\" -I           #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\" -I   #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\" -I        #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\OSAL\INCLUDE\" -I          #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\AF\" -I              #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\NWK\" -I             #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\SEC\" -I             #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\SAPI\" -I            #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\SYS\" -I             #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\ZDO\" -I             #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\ZMAC\F8W\" -I              #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\ZMAC\" -I                  #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\SERVICES\SADDR\" -I        #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\SERVICES\SDATA\" -I        #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\INCLUDE\" -I           #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\" -I        #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\" -I   #
#                          "C:\Users\win7\Desktop\ZStack传感器透明传输源程序V #
#                          2.45-13(带回码2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE #
#                          _CHIP\" -I "C:\Program Files (x86)\IAR             #
#                          Systems\Embedded Workbench 5.4\8051\INC\" -I       #
#                          "C:\Program Files (x86)\IAR Systems\Embedded       #
#                          Workbench 5.4\8051\INC\CLIB\" -Ohz                 #
#    List file          =  C:\Users\win7\Desktop\ZStack传感器透明传输源程序V2 #
#                          .45-13(带回码2018-5-20)\Projects\GenericApp\CC2530 #
#                          DB\Router\List\18B20.lst                           #
#    Object file        =  C:\Users\win7\Desktop\ZStack传感器透明传输源程序V2 #
#                          .45-13(带回码2018-5-20)\Projects\GenericApp\CC2530 #
#                          DB\Router\Obj\18B20.r51                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\win7\Desktop\ZStack传感器透明传输源程序V2.45-13(带回码2018-5-20)\Projects\GenericApp\Source\18B20.c
      1          #include <18B20.h>

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1
      2          /************************************************************
      3          * 程序功能: DS18B20测温
      4          * 硬件说明:	           AT89S51	DS18B20
      5          *			   P1_4		DG
      6          * 作    者:	
      7          ************************************************************/
      8          /************************************************************
      9          * 函数功能:小延时函数,约(2*i μ)s				    				
     10          * 入口参数:无										
     11          * 出口参数:无	
     12          * 作    者:												
     13          **********************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     14          void Delay(unsigned int i)
   \                     Delay:
     15          {while (i--);
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \                     ??Delay_0:
   \   000000   EA           MOV     A,R2
   \   000001   F8           MOV     R0,A
   \   000002   EB           MOV     A,R3
   \   000003   F9           MOV     R1,A
   \   000004   74FF         MOV     A,#-0x1
   \   000006   28           ADD     A,R0
   \   000007   1A           DEC     R2
   \   000008   74FF         MOV     A,#-0x1
   \   00000A   39           ADDC    A,R1
   \   00000B   FB           MOV     R3,A
   \   00000C   E8           MOV     A,R0
   \   00000D   7001         JNZ     ??Delay_1
   \   00000F   E9           MOV     A,R1
   \                     ??Delay_1:
   \   000010   70EE         JNZ     ??Delay_0
     16          }
   \   000012   02....       LJMP    ?BRET
     17          /************************************************************
     18          * 函数功能:DS18B20初始化复位脉冲函数									
     19          * 入口参数:无										
     20          * 出口参数:DQ	
     21          * 作    者:												
     22          **********************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     23          void Init_DS18B20(void)
   \                     Init_DS18B20:
     24          { 
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     25             DQ_WR;
   \   000004   43FE04       ORL     0xfe,#0x4
     26             SET_DQ1; //写1 
   \   000007   D292         SETB    0x90.2
     27             SET_DQ0; //写0       //单片机将DQ拉低,发送复位脉冲
   \   000009   C292         CLR     0x90.2
     28             Delay(413);          //精确延时 480us~960us
   \   00000B                ; Setup parameters for call to function Delay
   \   00000B   7A9D         MOV     R2,#-0x63
   \   00000D   7B01         MOV     R3,#0x1
   \   00000F   12....       LCALL   ?Subroutine1 & 0xFFFF
     29             SET_DQ1; //写1       //拉高总线
     30             delay_1us();
     31                    //精确延时 15us~60us
     32             DQ_RD;
   \                     ??CrossCallReturnLabel_2:
   \   000012   53FEFB       ANL     0xfe,#0xfb
     33             Delay(32);
   \   000015                ; Setup parameters for call to function Delay
   \   000015   7A20         MOV     R2,#0x20
   \   000017   7B00         MOV     R3,#0x0
   \   000019   12....       LCALL   ??Delay?relay
     34             for(int i=0;i<30000;i++)
   \   00001C   7800         MOV     R0,#0x0
   \   00001E   7900         MOV     R1,#0x0
     35              if(!GET_DQ)i=30000; 
   \                     ??Init_DS18B20_0:
   \   000020   A292         MOV     C,0x90.2
   \   000022   4004         JC      ??Init_DS18B20_1
   \   000024   7830         MOV     R0,#0x30
   \   000026   7975         MOV     R1,#0x75
   \                     ??Init_DS18B20_1:
   \   000028   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_4:
   \   00002B   40F3         JC      ??Init_DS18B20_0
     36             for(int i=0;i<30000;i++)
   \   00002D   7800         MOV     R0,#0x0
   \   00002F   7900         MOV     R1,#0x0
     37              if(!GET_DQ)i=30000; 
   \                     ??Init_DS18B20_2:
   \   000031   A292         MOV     C,0x90.2
   \   000033   4004         JC      ??Init_DS18B20_3
   \   000035   7830         MOV     R0,#0x30
   \   000037   7975         MOV     R1,#0x75
   \                     ??Init_DS18B20_3:
   \   000039   12....       LCALL   ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   00003C   40F3         JC      ??Init_DS18B20_2
     38            // while(GET_DQ)       //如果DQ=0则存在脉冲有效，初始化成功，如果DQ=1
     39             Delay(20);           //稍做延时后
   \   00003E                ; Setup parameters for call to function Delay
   \   00003E   7A14         MOV     R2,#0x14
   \   000040   7B00         MOV     R3,#0x0
   \   000042   12....       LCALL   ??Delay?relay
     40              DQ_WR;
   \   000045   43FE04       ORL     0xfe,#0x4
     41             SET_DQ1; //写1 
   \   000048   D292         SETB    0x90.2
     42             Delay(405);
   \   00004A                ; Setup parameters for call to function Delay
   \   00004A   7A95         MOV     R2,#-0x6b
   \   00004C   7B01         MOV     R3,#0x1
   \   00004E   12....       LCALL   ??Delay?relay
     43             
     44          }
   \   000051   D083         POP     DPH
   \   000053   D082         POP     DPL
   \   000055   02....       LJMP    ?BRET
   \   000058                REQUIRE _A_P1
   \   000058                REQUIRE P1DIR

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   E8           MOV     A,R0
   \   000001   2401         ADD     A,#0x1
   \   000003   08           INC     R0
   \   000004   E9           MOV     A,R1
   \   000005   3400         ADDC    A,#0x0
   \   000007   F9           MOV     R1,A
   \   000008   C3           CLR     C
   \   000009   E8           MOV     A,R0
   \   00000A   9430         SUBB    A,#0x30
   \   00000C   E9           MOV     A,R1
   \   00000D   9475         SUBB    A,#0x75
   \   00000F   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000011   65D0         XRL     A,PSW
   \   000013   33           RLC     A
   \   000014   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   12....       LCALL   ??Delay?relay
   \   000003   D292         SETB    0x90.2
   \   000005   00           nop
   \   000006   00           nop
   \   000007   00           nop
   \   000008   00           nop
   \   000009   00           nop
   \   00000A   00           nop
   \   00000B   00           nop
   \   00000C   00           nop
   \   00000D   00           nop
   \   00000E   00           nop
   \   00000F   00           nop
   \   000010   00           nop
   \   000011   00           nop
   \   000012   00           nop
   \   000013   00           nop
   \   000014   00           nop
   \   000015   00           nop
   \   000016   00           nop
   \   000017   22           RET
     45          /************************************************************
     46          * 函数功能:DS18B20写1字节命令函数									
     47          * 入口参数:无										
     48          * 出口参数:DQ	
     49          * 作    者:												
     50          **********************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     51          void WriteOneChar(unsigned char Data)
   \                     WriteOneChar:
     52          {    unsigned char i;
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
     53              
     54              for(i=0;i<8;i++)
   \   000007   7E08         MOV     R6,#0x8
     55              {   DQ_WR; //写
   \                     ??WriteOneChar_0:
   \   000009   12....       LCALL   ?Subroutine0 & 0xFFFF
     56                 SET_DQ0;
     57                 delay_1us();  //4//4us
     58                  delay_1us(); 
     59                  delay_1us(); 
   \                     ??CrossCallReturnLabel_0:
   \   00000C   00           nop
   \   00000D   00           nop
   \   00000E   00           nop
   \   00000F   00           nop
   \   000010   00           nop
   \   000011   00           nop
   \   000012   00           nop
   \   000013   00           nop
   \   000014   00           nop
   \   000015   00           nop
   \   000016   00           nop
   \   000017   00           nop
   \   000018   00           nop
   \   000019   00           nop
   \   00001A   00           nop
   \   00001B   00           nop
   \   00001C   00           nop
   \   00001D   00           nop
     60                  delay_1us(); 
   \   00001E   00           nop
   \   00001F   00           nop
   \   000020   00           nop
   \   000021   00           nop
   \   000022   00           nop
   \   000023   00           nop
   \   000024   00           nop
   \   000025   00           nop
   \   000026   00           nop
   \   000027   00           nop
   \   000028   00           nop
   \   000029   00           nop
   \   00002A   00           nop
   \   00002B   00           nop
   \   00002C   00           nop
   \   00002D   00           nop
   \   00002E   00           nop
   \   00002F   00           nop
     61                 if(Data&0x01) SET_DQ1;
   \   000030   EF           MOV     A,R7
   \   000031   A2E0         MOV     C,0xE0 /* A   */.0
   \   000033   5002         JNC     ??WriteOneChar_1
   \   000035   D292         SETB    0x90.2
     62                 Data>>=1;
   \                     ??WriteOneChar_1:
   \   000037   C3           CLR     C
   \   000038   13           RRC     A
   \   000039   FF           MOV     R7,A
     63                 Delay(48);         //等待时间隙 60-120
   \   00003A                ; Setup parameters for call to function Delay
   \   00003A   7A30         MOV     R2,#0x30
   \   00003C   7B00         MOV     R3,#0x0
   \   00003E   12....       LCALL   ?Subroutine1 & 0xFFFF
     64                 SET_DQ1;	
     65                 delay_1us();
     66              }
   \                     ??CrossCallReturnLabel_3:
   \   000041   1E           DEC     R6
   \   000042   EE           MOV     A,R6
   \   000043   70C4         JNZ     ??WriteOneChar_0
     67          
     68          }
   \   000045   7F01         MOV     R7,#0x1
   \   000047   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00004A                REQUIRE _A_P1
   \   00004A                REQUIRE P1DIR

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   43FE04       ORL     0xfe,#0x4
   \   000003   C292         CLR     0x90.2
   \   000005   00           nop
   \   000006   00           nop
   \   000007   00           nop
   \   000008   00           nop
   \   000009   00           nop
   \   00000A   00           nop
   \   00000B   00           nop
   \   00000C   00           nop
   \   00000D   00           nop
   \   00000E   00           nop
   \   00000F   00           nop
   \   000010   00           nop
   \   000011   00           nop
   \   000012   00           nop
   \   000013   00           nop
   \   000014   00           nop
   \   000015   00           nop
   \   000016   00           nop
   \   000017   00           nop
   \   000018   00           nop
   \   000019   00           nop
   \   00001A   00           nop
   \   00001B   00           nop
   \   00001C   00           nop
   \   00001D   00           nop
   \   00001E   00           nop
   \   00001F   00           nop
   \   000020   00           nop
   \   000021   00           nop
   \   000022   00           nop
   \   000023   00           nop
   \   000024   00           nop
   \   000025   00           nop
   \   000026   00           nop
   \   000027   00           nop
   \   000028   00           nop
   \   000029   22           RET
     69          /************************************************************
     70          * 函数功能:DS18B20读1字节数据函数									
     71          * 入口参数:无										
     72          * 出口参数:1字节数据
     73          * 作    者:												
     74          **********************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     75          unsigned char ReadOneChar(void)
   \                     ReadOneChar:
     76          {   unsigned char i;
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
     77              unsigned char Data=0;
   \   000005   75..00       MOV     ?V0 + 0,#0x0
     78              for(i=0;i<8;i++)
   \   000008   7E00         MOV     R6,#0x0
     79              {
     80                DQ_WR; //写
   \                     ??ReadOneChar_0:
   \   00000A   12....       LCALL   ?Subroutine0 & 0xFFFF
     81                SET_DQ0;  // 给脉冲信号
     82                delay_1us();
     83                delay_1us();
     84                SET_DQ1;  // 给脉冲信号
   \                     ??CrossCallReturnLabel_1:
   \   00000D   D292         SETB    0x90.2
     85                delay_1us();
   \   00000F   00           nop
   \   000010   00           nop
   \   000011   00           nop
   \   000012   00           nop
   \   000013   00           nop
   \   000014   00           nop
   \   000015   00           nop
   \   000016   00           nop
   \   000017   00           nop
   \   000018   00           nop
   \   000019   00           nop
   \   00001A   00           nop
   \   00001B   00           nop
   \   00001C   00           nop
   \   00001D   00           nop
   \   00001E   00           nop
   \   00001F   00           nop
   \   000020   00           nop
     86                DQ_RD; //读
   \   000021   53FEFB       ANL     0xfe,#0xfb
     87                Delay(4); 
   \   000024                ; Setup parameters for call to function Delay
   \   000024   7A04         MOV     R2,#0x4
   \   000026   7B00         MOV     R3,#0x0
   \   000028   12....       LCALL   ??Delay?relay
     88                if(GET_DQ)Data|=(0x01<<i);
   \   00002B   A292         MOV     C,0x90.2
   \   00002D   5010         JNC     ??ReadOneChar_1
   \   00002F   75..01       MOV     ?V0 + 2,#0x1
   \   000032   75..00       MOV     ?V0 + 3,#0x0
   \   000035   EE           MOV     A,R6
   \   000036   78..         MOV     R0,#?V0 + 2
   \   000038   12....       LCALL   ?S_SHL
   \   00003B   E5..         MOV     A,?V0 + 2
   \   00003D   42..         ORL     ?V0 + 0,A
     89                Delay(54) ;  //等待时间隙60-120
   \                     ??ReadOneChar_1:
   \   00003F                ; Setup parameters for call to function Delay
   \   00003F   7A36         MOV     R2,#0x36
   \   000041   7B00         MOV     R3,#0x0
   \   000043   12....       LCALL   ??Delay?relay
     90              } 
   \   000046   0E           INC     R6
   \   000047   EE           MOV     A,R6
   \   000048   C3           CLR     C
   \   000049   9408         SUBB    A,#0x8
   \   00004B   40BD         JC      ??ReadOneChar_0
     91               DQ_WR; //写
   \   00004D   43FE04       ORL     0xfe,#0x4
     92               SET_DQ1;  
   \   000050   D292         SETB    0x90.2
     93               delay_1us();
   \   000052   00           nop
   \   000053   00           nop
   \   000054   00           nop
   \   000055   00           nop
   \   000056   00           nop
   \   000057   00           nop
   \   000058   00           nop
   \   000059   00           nop
   \   00005A   00           nop
   \   00005B   00           nop
   \   00005C   00           nop
   \   00005D   00           nop
   \   00005E   00           nop
   \   00005F   00           nop
   \   000060   00           nop
   \   000061   00           nop
   \   000062   00           nop
   \   000063   00           nop
     94              
     95              return  Data;
   \   000064   A9..         MOV     R1,?V0 + 0
   \   000066   7F04         MOV     R7,#0x4
   \   000068   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00006B                REQUIRE _A_P1
   \   00006B                REQUIRE P1DIR
     96          }
     97          /************************************************************
     98          * 函数功能:DS18B20读二进制16位温度									
     99          * 入口参数:无										
    100          * 出口参数:二进制16位温度
    101          * 作    者:												
    102          **********************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    103          unsigned int ReadTemperature(void)
   \                     ReadTemperature:
    104          {   unsigned char a=0,b=0;//,c[8];
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    105              unsigned int THex = 0;//,i=0;
    106              Init_DS18B20();
   \   000005                ; Setup parameters for call to function Init_DS18B20
   \   000005   12....       LCALL   ?Subroutine3 & 0xFFFF
    107              WriteOneChar(0xCC); // 跳过读序号列号的操作
    108              WriteOneChar(0x44); // 启动温度转换
   \                     ??CrossCallReturnLabel_6:
   \   000008                ; Setup parameters for call to function WriteOneChar
   \   000008   7944         MOV     R1,#0x44
   \   00000A   12....       LCALL   ??WriteOneChar?relay
    109              //Delay(30000); 
    110              Init_DS18B20();
   \   00000D                ; Setup parameters for call to function Init_DS18B20
   \   00000D   12....       LCALL   ?Subroutine3 & 0xFFFF
    111              WriteOneChar(0xCC); //跳过读序号列号的操作
    112              WriteOneChar(0xBE); //读取温度寄存器等（共可读9个寄存器）前两个就是温度
   \                     ??CrossCallReturnLabel_7:
   \   000010                ; Setup parameters for call to function WriteOneChar
   \   000010   79BE         MOV     R1,#-0x42
   \   000012   12....       LCALL   ??WriteOneChar?relay
    113              a = ReadOneChar();	//温度的低8位
   \   000015                ; Setup parameters for call to function ReadOneChar
   \   000015   12....       LCALL   ??ReadOneChar?relay
   \   000018   E9           MOV     A,R1
   \   000019   F5..         MOV     ?V0 + 0,A
    114              b = ReadOneChar();  //温度的高8位
    115          	THex = b;
    116              THex=THex*256;
    117              THex = (THex | a);
    118              return(THex);
   \   00001B                ; Setup parameters for call to function ReadOneChar
   \   00001B   12....       LCALL   ??ReadOneChar?relay
   \   00001E   AA..         MOV     R2,?V0 + 0
   \   000020   E9           MOV     A,R1
   \   000021   FB           MOV     R3,A
   \   000022   7F02         MOV     R7,#0x2
   \   000024   02....       LJMP    ?BANKED_LEAVE_XDATA
    119          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ??Init_DS18B20?relay
   \   000003                ; Setup parameters for call to function WriteOneChar
   \   000003                ; Setup parameters for call to function WriteOneChar
   \   000003   79CC         MOV     R1,#-0x34
   \   000005   12....       LCALL   ??WriteOneChar?relay
   \   000008   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Delay?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Delay

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Init_DS18B20?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Init_DS18B20

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??WriteOneChar?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    WriteOneChar

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ReadOneChar?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ReadOneChar

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??ReadTemperature?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    ReadTemperature

   Maximum stack usage in bytes:

     Function          ISTACK PSTACK XSTACK
     --------          ------ ------ ------
     Delay                 0      0     12
     Init_DS18B20          2      0     10
       -> Delay            4      0      0
       -> Delay            4      0      0
       -> Delay            4      0      0
       -> Delay            4      0      0
     ReadOneChar           0      0     22
       -> Delay            0      0     24
       -> Delay            0      0     24
     ReadTemperature       0      0     10
       -> Init_DS18B20     0      0     20
       -> WriteOneChar     0      0     20
       -> WriteOneChar     0      0     20
       -> Init_DS18B20     0      0     20
       -> WriteOneChar     0      0     20
       -> WriteOneChar     0      0     20
       -> ReadOneChar      0      0     20
       -> ReadOneChar      0      0     20
     WriteOneChar          0      0     19
       -> Delay            0      0     18


   Segment part sizes:

     Function/Label          Bytes
     --------------          -----
     _A_P1                      1
     P1DIR                      1
     Delay                     21
     Init_DS18B20              88
     ?Subroutine2              21
     ?Subroutine1              24
     WriteOneChar              74
     ?Subroutine0              42
     ReadOneChar              107
     ReadTemperature           39
     ?Subroutine3               9
     ??Delay?relay              6
     ??Init_DS18B20?relay       6
     ??WriteOneChar?relay       6
     ??ReadOneChar?relay        6
     ??ReadTemperature?relay    6

 
 425 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
   2 bytes in segment SFR_AN
 
 455 bytes of CODE memory
   0 bytes of DATA memory (+ 2 bytes shared)

Errors: none
Warnings: none
