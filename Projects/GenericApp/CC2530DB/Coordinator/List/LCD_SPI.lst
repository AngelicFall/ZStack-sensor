###############################################################################
#                                                                             #
# IAR C/C++ Compiler V7.60.1.40026 for 8051             08/Jun/2018  08:42:01 #
# Copyright (C) 2004-2010 IAR Systems AB.                                     #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV2 #
#                          .45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\Source #
#                          \LCD_SPI.c                                         #
#    Command line       =  -f "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³Ì #
#                          ÐòV2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC #
#                          2530DB\..\..\..\COMPONENTS\Tools\CC2530DB\f8wCoord #
#                          .cfg" (-DCPU32MHZ -DROOT=__near_func               #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DRTR_NWK) -f                   #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\Tools\CC2530DB\f8wConfig.c #
#                          fg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR  #
#                          -DNWK_START_DELAY=1000 -DEXTENDED_JOINING_RANDOM_M #
#                          ASK=0x007F -DBEACON_REQUEST_DELAY=1000             #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "C:\Users\win7\Desktop\ZSta #
#                          ck´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV2.45-13(´ø»ØÂë2018-5-20)\Pr #
#                          ojects\GenericApp\Source\LCD_SPI.c" -D ZTOOL_P1    #
#                          -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC -D        #
#                          HAL_PA_LNA -D SERIAL_SUPPORTED=DEBUG -D            #
#                          SENSOR_TYPE_Coord -D CHANLIST_C_R_E=25 -D          #
#                          ZDAPP_CONFIG_PAN_ID=0x0004 -D FT_PAN_ID_C_R_C -D   #
#                          ZigBee_C_R_E_Engineering -D ZDO_COORDINATOR=0 -D   #
#                          xNV_RESTORE -lC "C:\Users\win7\Desktop\ZStack´«¸ÐÆ #
#                          ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV2.45-13(´ø»ØÂë2018-5-20)\Projects\ #
#                          GenericApp\CC2530DB\Coordinator\List\" -lA         #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\Coordinator\List\" --diag_suppress             #
#                          Pe001,Pa010 -o "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷ #
#                          Í¸Ã÷´«ÊäÔ´³ÌÐòV2.45-13(´ø»ØÂë2018-5-20)\Projects\G #
#                          enericApp\CC2530DB\Coordinator\Obj\" -e            #
#                          --require_prototypes --debug --core=plain          #
#                          --dptr=16,1 --data_model=large                     #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I "C:\Users\win7\Desktop\ZSt #
#                          ack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV2.45-13(´ø»ØÂë2018-5-20)\P #
#                          rojects\GenericApp\CC2530DB\" -I                   #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\SOURCE\" -I "C:\Users\win7\Desktop\ZStack´« #
#                          ¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV2.45-13(´ø»ØÂë2018-5-20)\Projec #
#                          ts\GenericApp\CC2530DB\..\..\..\COMPONENTS\ZMAIN\T #
#                          I2530DB\" -I "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸ #
#                          Ã÷´«ÊäÔ´³ÌÐòV2.45-13(´ø»ØÂë2018-5-20)\Projects\Gen #
#                          ericApp\CC2530DB\..\..\..\COMPONENTS\MT\" -I       #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\HAL\INCLUDE\" -I           #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\" -I   #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\" -I        #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\OSAL\INCLUDE\" -I          #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\AF\" -I              #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\NWK\" -I             #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\SEC\" -I             #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\SAPI\" -I            #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\SYS\" -I             #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\STACK\ZDO\" -I             #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\ZMAC\F8W\" -I              #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\ZMAC\" -I                  #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\SERVICES\SADDR\" -I        #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\SERVICES\SDATA\" -I        #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\INCLUDE\" -I           #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\" -I        #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\" -I   #
#                          "C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV #
#                          2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC253 #
#                          0DB\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE #
#                          _CHIP\" -I "C:\Program Files (x86)\IAR             #
#                          Systems\Embedded Workbench 5.4\8051\INC\" -I       #
#                          "C:\Program Files (x86)\IAR Systems\Embedded       #
#                          Workbench 5.4\8051\INC\CLIB\" -Ohz                 #
#    List file          =  C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV2 #
#                          .45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC2530 #
#                          DB\Coordinator\List\LCD_SPI.lst                    #
#    Object file        =  C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV2 #
#                          .45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\CC2530 #
#                          DB\Coordinator\Obj\LCD_SPI.r51                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\win7\Desktop\ZStack´«¸ÐÆ÷Í¸Ã÷´«ÊäÔ´³ÌÐòV2.45-13(´ø»ØÂë2018-5-20)\Projects\GenericApp\Source\LCD_SPI.c
      1          /*******************************************************************************
      2           * ÎÄ¼þÃû³Æ£ºhal_led.c
      3           * ¹¦    ÄÜ£ºOLEDÇý¶¯
      4           *           Ê¹ÓÃÓ²¼þSPI×ÜÏßÇý¶¯128*64µãÕóOLEDÒº¾§
      5           * Ó²¼þÁ¬½Ó£ºÒº¾§Ä£¿éÓëCC2530µÄÓ²¼þÁ¬½Ó¹ØÏµÈçÏÂ£º
      6           *                Òº¾§Ä£¿é                       CC2530
      7           *                  CS                            P1.2
      8           *                  SDA                           P1.6
      9           *                  SCK                           P1.5
     10           *                  RESET                         P0.0
     11           *                  D/C#                          P2.2
     12           *                ×Ö¿âÐ¾Æ¬
     13           *                  CS#                           P2.1
     14           *                  SCLK                          P1.5
     15           *                  SI                            P1.6
     16           *                  SO                            P1.7
     17           *
     18           * ×÷    Õß£ºw
     19           * ¹«    Ë¾£ºÎÞÎý·ºÌ«¿Æ¼¼ÓÐÏÞ¹«Ë¾
     20           ******************************************************************************/
     21          
     22          /* °üº¬Í·ÎÄ¼þ */
     23          /********************************************************************/
     24          #include "ioCC2530.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa0
   \   union <unnamed> volatile __sfr _A_P2
   \                     _A_P2:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xff
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1
     25          #include "hal_defs.h"
     26          #include "LCD_SPI.h"
     27          /********************************************************************/
     28          
     29          
     30          /* ±¾µØ±äÁ¿ */
     31          /********************************************************************/

   \                                 In  segment XDATA_I, align 1, keep-with-next
     32          uint8 X_Witch = 6;
   \                     X_Witch:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for X_Witch>`
   \   000001                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
     33          uint8 Y_Witch = 1;
   \                     Y_Witch:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for Y_Witch>`
   \   000001                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
     34          uint8 X_Witch_cn = 16;
   \                     X_Witch_cn:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for X_Witch_cn>`
   \   000001                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
     35          uint8 Y_Witch_cn = 16;
   \                     Y_Witch_cn:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for Y_Witch_cn>`
   \   000001                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     36          uint8 Dis_Zero = 0;
   \                     Dis_Zero:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     37          /********************************************************************/
     38          
     39          #define FUNCTION_SET(options,OLED_DC)       halOLED_control(options,OLED_DC)
     40          
     41          /*********************************************************************
     42           * º¯ÊýÃû³Æ£ºLCD_TimeDelay
     43           * ¹¦    ÄÜ£ºÑÓÊ±º¯Êý
     44           * Èë¿Ú²ÎÊý£ºTimers  ÑÓÊ±Ê±¼ä²ÎÊý
     45           * ³ö¿Ú²ÎÊý£ºÎÞ
     46           * ·µ »Ø Öµ£ºÎÞ
     47           ********************************************************************/
     48          void LCD_TimeDelay(uint16 Timers);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     49          void LCD_TimeDelay(uint16 Timers)
   \                     LCD_TimeDelay:
     50          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   800E         SJMP    ??LCD_TimeDelay_0
     51            uint16 i;
     52          
     53            while(Timers)
     54            {
     55              Timers--;
   \                     ??LCD_TimeDelay_1:
   \   000002   EA           MOV     A,R2
   \   000003   24FF         ADD     A,#-0x1
   \   000005   1A           DEC     R2
   \   000006   EB           MOV     A,R3
   \   000007   34FF         ADDC    A,#-0x1
   \   000009   FB           MOV     R3,A
     56              for(i = 0; i < 100; i++)NOP();
   \   00000A   7464         MOV     A,#0x64
   \                     ??LCD_TimeDelay_2:
   \   00000C   00           nop
   \   00000D   14           DEC     A
   \   00000E   70FC         JNZ     ??LCD_TimeDelay_2
     57            }
   \                     ??LCD_TimeDelay_0:
   \   000010   EA           MOV     A,R2
   \   000011   7001         JNZ     ??LCD_TimeDelay_3
   \   000013   EB           MOV     A,R3
   \                     ??LCD_TimeDelay_3:
   \   000014   70EC         JNZ     ??LCD_TimeDelay_1
     58          }
   \   000016   02....       LJMP    ?BRET
     59          
     60          
     61          /*********************************************************************
     62           * º¯ÊýÃû³Æ£ºLCD_SPISSSet
     63           * ¹¦    ÄÜ£ºÖÃSSÏß×´Ì¬
     64           * Èë¿Ú²ÎÊý£ºStatus SSÏß×´Ì¬
     65           * ³ö¿Ú²ÎÊý£ºÎÞ
     66           * ·µ »Ø Öµ£ºÎÞ
     67           ********************************************************************/
     68          void LCD_SPISSSet(uint8 Status);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     69          void LCD_SPISSSet(uint8 Status)
   \                     LCD_SPISSSet:
     70          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     71            NOP();NOP();NOP();
   \   000000   00           nop
   \   000001   00           nop
   \   000002   00           nop
     72            if(Status)				
   \   000003   E9           MOV     A,R1
   \   000004   6004         JZ      ??LCD_SPISSSet_0
     73              H_LCD_CSn();
   \   000006   D292         SETB    0x90.2
   \   000008   8002         SJMP    ??LCD_SPISSSet_1
     74            else
     75              L_LCD_CSn();
   \                     ??LCD_SPISSSet_0:
   \   00000A   C292         CLR     0x90.2
     76          
     77            NOP();NOP();NOP();NOP();
   \                     ??LCD_SPISSSet_1:
   \   00000C                REQUIRE ?Subroutine0
   \   00000C                REQUIRE _A_P1
   \   00000C                ; // Fall through to label ?Subroutine0
     78          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   00           nop
   \   000001   00           nop
   \   000002   00           nop
   \   000003   00           nop
   \   000004   02....       LJMP    ?BRET
     79          
     80          /*********************************************************************
     81           * º¯ÊýÃû³Æ£ºLCD_SPI_DC
     82           * ¹¦    ÄÜ£ºÖÃDATA/COMMANDÏß×´Ì¬
     83           * Èë¿Ú²ÎÊý£ºStatus SSÏß×´Ì¬
     84           * ³ö¿Ú²ÎÊý£ºÎÞ
     85           * ·µ »Ø Öµ£ºÎÞ
     86           ********************************************************************/
     87          void LCD_SPI_DC(uint8 Status);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     88          void LCD_SPI_DC(uint8 Status)
   \                     LCD_SPI_DC:
     89          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     90            NOP();NOP();NOP();
   \   000000   00           nop
   \   000001   00           nop
   \   000002   00           nop
     91            if(Status)				
   \   000003   E9           MOV     A,R1
   \   000004   6004         JZ      ??LCD_SPI_DC_0
     92              LCD_DATA();
   \   000006   D2A2         SETB    0xa0.2
   \   000008   8002         SJMP    ??LCD_SPI_DC_1
     93            else
     94              LCD_COMMAND();
   \                     ??LCD_SPI_DC_0:
   \   00000A   C2A2         CLR     0xa0.2
     95          
     96            NOP();NOP();NOP();NOP();
   \                     ??LCD_SPI_DC_1:
   \   00000C   80..         SJMP    ?Subroutine0
   \   00000E                REQUIRE _A_P2
     97          }
     98          
     99          /*********************************************************************
    100           * º¯ÊýÃû³Æ£ºGT20L_SPI
    101           * ¹¦    ÄÜ£ºÆ¬Ñ¡GT20
    102           * Èë¿Ú²ÎÊý£ºStatus SSÏß×´Ì¬
    103           * ³ö¿Ú²ÎÊý£ºÎÞ
    104           * ·µ »Ø Öµ£ºÎÞ
    105           ********************************************************************/
    106          void GT20L_SPI(uint8 Status);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    107          void GT20L_SPI(uint8 Status)
   \                     GT20L_SPI:
    108          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    109            NOP();NOP();NOP();
   \   000000   00           nop
   \   000001   00           nop
   \   000002   00           nop
    110            if(Status)				
   \   000003   E9           MOV     A,R1
   \   000004   6004         JZ      ??GT20L_SPI_0
    111              L_GT20_CSn();
   \   000006   C2A1         CLR     0xa0.1
   \   000008   8002         SJMP    ??GT20L_SPI_1
    112            else
    113              H_GT20_CSn();
   \                     ??GT20L_SPI_0:
   \   00000A   D2A1         SETB    0xa0.1
    114          
    115            NOP();NOP();NOP();NOP();
   \                     ??GT20L_SPI_1:
   \   00000C   80..         SJMP    ?Subroutine0
   \   00000E                REQUIRE _A_P2
    116          }
    117          /*********************************************************************
    118           * º¯ÊýÃû³Æ£ºLCD_SPISendData
    119           * ¹¦    ÄÜ£ºÍ¨¹ý´®ÐÐSPI¿ÚÊäËÍÒ»¸öbyteµÄÊý¾ÝÖÃÄ£×é
    120           * Èë¿Ú²ÎÊý£ºData  Òª´«ËÍµÄÊý¾Ý
    121           * ³ö¿Ú²ÎÊý£ºtemp
    122           * ·µ »Ø Öµ£ºSPI½Óµ½Êý¾Ý
    123           ********************************************************************/
    124          uint8 LCD_SPISendDatas(uint8 Data);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    125          uint8 LCD_SPISendDatas(uint8 Data)
   \                     LCD_SPISendDatas:
    126          {
   \   000000   C0..         PUSH    ?V0 + 0
   \   000002   C0..         PUSH    ?V0 + 1
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   E9           MOV     A,R1
   \   000005   FB           MOV     R3,A
    127            uint8 i=0;
    128            uint8 temp=0;
   \   000006   7900         MOV     R1,#0x0
    129          
    130            for(i = 0; i < 8; i++)
   \   000008   7A00         MOV     R2,#0x0
    131            {
    132              NOP();NOP();NOP();NOP();NOP();NOP(); // ÊÊµ±²åÈëÒ»Ð©¿Õ²Ù×÷ÒÔ±£Ö¤SPIÊ±ÖÓËÙ¶ÈÐ¡ÓÚ2MHz
   \                     ??LCD_SPISendDatas_0:
   \   00000A   00           nop
   \   00000B   00           nop
   \   00000C   00           nop
   \   00000D   00           nop
   \   00000E   00           nop
   \   00000F   00           nop
    133              L_LCD_SCK();	
   \   000010   C295         CLR     0x90.5
    134          		
    135              if(Data&0x80)
   \   000012   EB           MOV     A,R3
   \   000013   A2E7         MOV     C,0xE0 /* A   */.7
   \   000015   5004         JNC     ??LCD_SPISendDatas_1
    136                H_LCD_SDA();
   \   000017   D296         SETB    0x90.6
   \   000019   8002         SJMP    ??LCD_SPISendDatas_2
    137              else
    138                L_LCD_SDA();
   \                     ??LCD_SPISendDatas_1:
   \   00001B   C296         CLR     0x90.6
    139          
    140              NOP();NOP();NOP();NOP();NOP(); //ÊÊµ±²åÈëÒ»Ð©¿Õ²Ù×÷ÒÔ±£Ö¤SPIÊ±ÖÓËÙ¶ÈÐ¡ÓÚ2MHz
   \                     ??LCD_SPISendDatas_2:
   \   00001D   00           nop
   \   00001E   00           nop
   \   00001F   00           nop
   \   000020   00           nop
   \   000021   00           nop
    141              NOP();NOP();NOP();NOP();NOP();
   \   000022   00           nop
   \   000023   00           nop
   \   000024   00           nop
   \   000025   00           nop
   \   000026   00           nop
    142              H_LCD_SCK();
   \   000027   D295         SETB    0x90.5
    143              if(GT20_MISO==1)
   \   000029   A297         MOV     C,0x90.7
   \   00002B   5014         JNC     ??LCD_SPISendDatas_3
    144              {
    145                temp=temp | BV(7-i);
   \   00002D   75..01       MOV     ?V0 + 0,#0x1
   \   000030   75..00       MOV     ?V0 + 1,#0x0
   \   000033   7407         MOV     A,#0x7
   \   000035   C3           CLR     C
   \   000036   9A           SUBB    A,R2
   \   000037   78..         MOV     R0,#?V0 + 0
   \   000039   12....       LCALL   ?S_SHL
   \   00003C   E5..         MOV     A,?V0 + 0
   \   00003E   C9           XCH     A,R1
   \   00003F   49           ORL     A,R1
   \   000040   F9           MOV     R1,A
    146              }
    147              NOP();NOP();NOP();NOP();NOP();
   \                     ??LCD_SPISendDatas_3:
   \   000041   00           nop
   \   000042   00           nop
   \   000043   00           nop
   \   000044   00           nop
   \   000045   00           nop
    148          		
    149              Data = Data << 1;		   //Êý¾Ý×óÒÆÒ»Î»
   \   000046   EB           MOV     A,R3
   \   000047   C3           CLR     C
   \   000048   33           RLC     A
   \   000049   FB           MOV     R3,A
    150            }
   \   00004A   0A           INC     R2
   \   00004B   EA           MOV     A,R2
   \   00004C   C3           CLR     C
   \   00004D   9408         SUBB    A,#0x8
   \   00004F   40B9         JC      ??LCD_SPISendDatas_0
    151            NOP();NOP();NOP();NOP();NOP();NOP();NOP();NOP();
   \   000051   00           nop
   \   000052   00           nop
   \   000053   00           nop
   \   000054   00           nop
   \   000055   00           nop
   \   000056   00           nop
   \   000057   00           nop
   \   000058   00           nop
    152            return temp;
   \   000059   D0..         POP     ?V0 + 1
   \   00005B   D0..         POP     ?V0 + 0
   \   00005D   02....       LJMP    ?BRET
   \   000060                REQUIRE _A_P1
    153          }
    154          /*********************************************************************
    155           * º¯ÊýÃû³Æ£ºhalOLED_control
    156           * ¹¦    ÄÜ£ºÍ¨¹ý´®ÐÐSPI¿ÚÊäËÍÒ»¸öbyteµÄÊý¾ÝÖÃÄ£×é
    157           * Èë¿Ú²ÎÊý£ºÊý¾Ýcmd, ÃüÁî¿ØÖÆ OLED_DC
    158           * ³ö¿Ú²ÎÊý£ºÎÞ
    159           * ·µ »Ø Öµ£ºÎÞ
    160           ********************************************************************/
    161          void halOLED_control(uint8 cmd, uint8 OLED_DC);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    162          void halOLED_control(uint8 cmd, uint8 OLED_DC)
   \                     halOLED_control:
    163          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   EA           MOV     A,R2
   \   000008   FF           MOV     R7,A
    164            LCD_SPISSSet(0);	   //SSÖÃµÍµçÆ½
   \   000009                ; Setup parameters for call to function LCD_SPISSSet
   \   000009   7900         MOV     R1,#0x0
   \   00000B   12....       LCALL   ??LCD_SPISSSet?relay
    165            if(OLED_DC==COMMAND)
   \   00000E   EF           MOV     A,R7
   \   00000F   7004         JNZ     ??halOLED_control_0
    166            {
    167              LCD_SPI_DC(0);
   \   000011                ; Setup parameters for call to function LCD_SPI_DC
   \   000011   7900         MOV     R1,#0x0
   \   000013   8002         SJMP    ??halOLED_control_1
    168            }
    169            else
    170            {
    171              LCD_SPI_DC(1);
   \                     ??halOLED_control_0:
   \   000015                ; Setup parameters for call to function LCD_SPI_DC
   \   000015   7901         MOV     R1,#0x1
   \                     ??halOLED_control_1:
   \   000017   12....       LCALL   ??LCD_SPI_DC?relay
    172            }
    173            LCD_SPISendDatas(cmd);   //ËÍÖ¸Áî0x80
   \   00001A                ; Setup parameters for call to function LCD_SPISendDatas
   \   00001A   EE           MOV     A,R6
   \   00001B   F9           MOV     R1,A
   \   00001C   12....       LCALL   ??LCD_SPISendDatas?relay
    174            LCD_SPI_DC(1);
   \   00001F                ; Setup parameters for call to function LCD_SPI_DC
   \   00001F   7901         MOV     R1,#0x1
   \   000021   12....       LCALL   ??LCD_SPI_DC?relay
    175            LCD_SPISSSet(1);	   //Íê³É²Ù×÷ÖÃSS¸ßµçÆ½
   \   000024                ; Setup parameters for call to function LCD_SPISSSet
   \   000024   7901         MOV     R1,#0x1
   \   000026   12....       LCALL   ??LCD_SPISSSet?relay
    176          }
   \   000029   80..         SJMP    ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    177          
    178          /*********************************************************************
    179           * º¯ÊýÃû³Æ£ºHalLed_SET_XY
    180           * ¹¦    ÄÜ£ºÉèÖÃ x y µØÖ·
    181           * Èë¿Ú²ÎÊý£ºx   xµØÖ·
    182           *           y   yµØÖ·
    183           * ³ö¿Ú²ÎÊý£ºÎÞ
    184           * ·µ »Ø Öµ£ºÎÞ
    185           ********************************************************************/
    186          void HalLed_SET_XY(unsigned char x,unsigned char y);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    187          void HalLed_SET_XY(unsigned char x,unsigned char y)
   \                     HalLed_SET_XY:
    188          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
   \   000007   EA           MOV     A,R2
   \   000008   FE           MOV     R6,A
    189            FUNCTION_SET(0x22,COMMAND);	//´«ËÍÖ¸Áî0x22
   \   000009                ; Setup parameters for call to function halOLED_control
   \   000009   7A00         MOV     R2,#0x0
   \   00000B   7922         MOV     R1,#0x22
   \   00000D   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    190            FUNCTION_SET(y,COMMAND);	//ÒªÏÔÊ¾×Ö·ûµÄ×óÉÏ½ÇµÄYÖáÎ»ÖÃ
   \                     ??CrossCallReturnLabel_11:
   \   000010   EE           MOV     A,R6
   \   000011   F9           MOV     R1,A
   \   000012   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    191            FUNCTION_SET(Dis_Y_MAX ,COMMAND);	//ÒªÏÔÊ¾×Ö·ûµÄ×óÉÏ½ÇµÄYÖáÎ»ÖÃ
   \                     ??CrossCallReturnLabel_12:
   \   000015   12....       LCALL   ?Subroutine4 & 0xFFFF
    192            FUNCTION_SET(0x21,COMMAND);	//´«ËÍÖ¸Áî0x21
   \                     ??CrossCallReturnLabel_9:
   \   000018   7921         MOV     R1,#0x21
   \   00001A   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    193            FUNCTION_SET(x,COMMAND);	//ÒªÏÔÊ¾×Ö·ûµÄ×óÉÏ½ÇµÄXÖáÎ»ÖÃ
   \                     ??CrossCallReturnLabel_13:
   \   00001D   EF           MOV     A,R7
   \   00001E   F9           MOV     R1,A
   \   00001F   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    194            FUNCTION_SET(Dis_X_MAX ,COMMAND);	//ÒªÏÔÊ¾×Ö·ûµÄ×óÉÏ½ÇµÄYÖáÎ»ÖÃ
   \                     ??CrossCallReturnLabel_14:
   \   000022   797F         MOV     R1,#0x7f
   \   000024   12....       LCALL   ??halOLED_control?relay
    195          }
   \   000027   80..         SJMP    ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   7907         MOV     R1,#0x7
   \   000002                REQUIRE ??Subroutine8_0
   \   000002                ; // Fall through to label ??Subroutine8_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine8_0:
   \   000000   12....       LCALL   ??halOLED_control?relay
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003   7A00         MOV     R2,#0x0
   \   000005   22           RET
    196          
    197          /*********************************************************************
    198           * º¯ÊýÃû³Æ£ºHalGT20L_TX_CMD
    199           * ¹¦    ÄÜ£ºGT20LÓ²¼þÐ´Èë¿ØÖÆ
    200           * Èë¿Ú²ÎÊý£ºcmd   Ð´ÈëÊý¾Ý
    201           * ³ö¿Ú²ÎÊý£ºÎÞ
    202           * ·µ »Ø Öµ£ºÎÞ
    203           ********************************************************************/
    204          int8 HalGT20L_TX_CMD(uint8 cmd );

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    205          int8 HalGT20L_TX_CMD(uint8 cmd )
   \                     HalGT20L_TX_CMD:
    206          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    207            return LCD_SPISendDatas(cmd);
   \   000005                ; Setup parameters for call to function LCD_SPISendDatas
   \   000005   12....       LCALL   ??LCD_SPISendDatas?relay
   \   000008                REQUIRE ?Subroutine1
   \   000008                ; // Fall through to label ?Subroutine1
    208          }
    209          
    210          /*********************************************************************
    211           * º¯ÊýÃû³Æ£ºhalGT20L_HRD_Font
    212           * ¹¦    ÄÜ£ºGT23L¶ÁÈ¡×Ö·ûÂëÖµº¯Êý
    213           * Èë¿Ú²ÎÊý£º Dst ×Ö¿âµØÖ·, no_bytes Ò»¸ö×Ö·ûÐèÒªµÄÂëÖµ ×Ö½ÚÊý ,  *buffer ÂëÖµ
    214           * ³ö¿Ú²ÎÊý£ºÎÞ
    215           * ·µ »Ø Öµ£ºÎÞ
    216           ********************************************************************/
    217          void halGT20L_HRD_Font(uint16 * Dst, uint8 no_bytes,uint8 *buffer);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    218          void halGT20L_HRD_Font(uint16 * Dst, uint8 no_bytes,uint8 *buffer)
   \                     halGT20L_HRD_Font:
    219          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
   \   000009   89..         MOV     ?V0 + 3,R1
   \   00000B   EC           MOV     A,R4
   \   00000C   FE           MOV     R6,A
   \   00000D   ED           MOV     A,R5
   \   00000E   FF           MOV     R7,A
    220              unsigned char i = 0;
    221              GT20L_SPI(1);                                // enable device
   \   00000F                ; Setup parameters for call to function GT20L_SPI
   \   00000F   7901         MOV     R1,#0x1
   \   000011   12....       LCALL   ??GT20L_SPI?relay
    222              HalGT20L_TX_CMD(0x0B);                       // read command
   \   000014                ; Setup parameters for call to function LCD_SPISendDatas
   \   000014   790B         MOV     R1,#0xb
   \   000016   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   000019   A3           INC     DPTR
   \   00001A   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   00001D   12....       LCALL   ?Subroutine6 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F9           MOV     R1,A
   \   000022   12....       LCALL   ??LCD_SPISendDatas?relay
    223              HalGT20L_TX_CMD(Dst[1]);  // send 3 address bytes
    224              HalGT20L_TX_CMD(((Dst[0]) >> 8));
    225              HalGT20L_TX_CMD(Dst[0] & 0xFF);
    226              HalGT20L_TX_CMD(0xFF);                       //dummy byte
   \   000025                ; Setup parameters for call to function LCD_SPISendDatas
   \   000025   79FF         MOV     R1,#-0x1
   \   000027   12....       LCALL   ??LCD_SPISendDatas?relay
    227              for (i = 0; i < no_bytes; i++)              // read until no_bytes is reached
   \   00002A   75..00       MOV     ?V0 + 2,#0x0
   \   00002D   8016         SJMP    ??halGT20L_HRD_Font_0
    228              {
    229                buffer[i] =HalGT20L_TX_CMD(0xFF);    // receive byte and store at address 80H - FFH
   \                     ??halGT20L_HRD_Font_1:
   \   00002F                ; Setup parameters for call to function LCD_SPISendDatas
   \   00002F   79FF         MOV     R1,#-0x1
   \   000031   12....       LCALL   ??LCD_SPISendDatas?relay
   \   000034   85....       MOV     ?V0 + 0,?V0 + 2
   \   000037   EE           MOV     A,R6
   \   000038   25..         ADD     A,?V0 + 0
   \   00003A   F582         MOV     DPL,A
   \   00003C   EF           MOV     A,R7
   \   00003D   3400         ADDC    A,#0x0
   \   00003F   F583         MOV     DPH,A
   \   000041   E9           MOV     A,R1
   \   000042   F0           MOVX    @DPTR,A
    230              }
   \   000043   05..         INC     ?V0 + 2
   \                     ??halGT20L_HRD_Font_0:
   \   000045   E5..         MOV     A,?V0 + 2
   \   000047   C3           CLR     C
   \   000048   95..         SUBB    A,?V0 + 3
   \   00004A   40E3         JC      ??halGT20L_HRD_Font_1
    231              GT20L_SPI(0);                                // disable device
   \   00004C                ; Setup parameters for call to function GT20L_SPI
   \   00004C   7900         MOV     R1,#0x0
   \   00004E   12....       LCALL   ??GT20L_SPI?relay
    232          }
   \   000051                REQUIRE ?Subroutine2
   \   000051                ; // Fall through to label ?Subroutine2

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ??LCD_SPISendDatas?relay
   \   000003                ; Setup parameters for call to function LCD_SPISendDatas
   \   000003                ; Setup parameters for call to function LCD_SPISendDatas
   \   000003                ; Setup parameters for call to function LCD_SPISendDatas
   \   000003   85..82       MOV     DPL,?V0 + 0
   \   000006   85..83       MOV     DPH,?V0 + 1
   \   000009   22           RET
    233          /*********************************************************************
    234           * º¯ÊýÃû³Æ£ºhalASCII_Searh_ADDR
    235           * ¹¦    ÄÜ£ºASCIIÂë×Ö·ûÄÚÂë
    236           * Èë¿Ú²ÎÊý£ºuint8 ASCIICode,uint16 * CODE_ADDR
    237           * ³ö¿Ú²ÎÊý£ºÎÞ
    238           * ·µ »Ø Öµ£ºÎÞ
    239           ********************************************************************/
    240          void halASCII_Searh_ADDR(uint8 ASCIICode,uint16 * CODE_ADDR);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    241          void halASCII_Searh_ADDR(uint8 ASCIICode,uint16 * CODE_ADDR)
   \                     halASCII_Searh_ADDR:
    242          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    243            uint16 ASCII_Code_Addr = 0;
    244           // ASCII_Code_Addr = ((((uint16)ASCIICode) - (uint16)0x20) * 8) +0x66C0;//ÇÐ»»×ÖÌå
    245            ASCII_Code_Addr = ((((uint16)ASCIICode) - (uint16)0x20) * 8) +0xbfC0;
    246            CODE_ADDR[0]=ASCII_Code_Addr ;
   \   000005   89..         MOV     ?V0 + 0,R1
   \   000007   75..00       MOV     ?V0 + 1,#0x0
   \   00000A   7403         MOV     A,#0x3
   \   00000C   78..         MOV     R0,#?V0 + 0
   \   00000E   12....       LCALL   ?S_SHL
   \   000011   74C0         MOV     A,#-0x40
   \   000013   25..         ADD     A,?V0 + 0
   \   000015   FC           MOV     R4,A
   \   000016   74BE         MOV     A,#-0x42
   \   000018   35..         ADDC    A,?V0 + 1
   \   00001A   FD           MOV     R5,A
   \   00001B   8A82         MOV     DPL,R2
   \   00001D   8B83         MOV     DPH,R3
   \   00001F   EC           MOV     A,R4
   \   000020   F0           MOVX    @DPTR,A
   \   000021   A3           INC     DPTR
   \   000022   ED           MOV     A,R5
   \   000023   F0           MOVX    @DPTR,A
    247            CODE_ADDR[1]=0x03;
   \   000024   8A82         MOV     DPL,R2
   \   000026   8B83         MOV     DPH,R3
   \   000028   A3           INC     DPTR
   \   000029   A3           INC     DPTR
   \   00002A   7403         MOV     A,#0x3
   \   00002C   F0           MOVX    @DPTR,A
   \   00002D   A3           INC     DPTR
   \   00002E   E4           CLR     A
   \   00002F   F0           MOVX    @DPTR,A
    248          }
   \   000030   7F02         MOV     R7,#0x2
   \   000032   02....       LJMP    ?BANKED_LEAVE_XDATA
    249          
    250          /*********************************************************************
    251           * º¯ÊýÃû³Æ£ºLCD_WriteChar
    252           * ¹¦    ÄÜ£ºÏÔÊ¾ASCIIÂë×Ö·û
    253           * Èë¿Ú²ÎÊý£ºx  ÒªÏÔÊ¾µÄ×Ö·ûxµØÖ·
    254           *           y  ÒªÏÔÊ¾µÄ×Ö·ûyµØÖ·
    255           *           a  ÒªÏÔÊ¾µÄASCIIÂë×Ö·ûÖµ
    256           * ³ö¿Ú²ÎÊý£ºÎÞ
    257           * ·µ »Ø Öµ£ºÎÞ
    258           ********************************************************************/
    259          void LCD_WriteChar(uint8 x, uint8 y, const char a);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    260          void LCD_WriteChar(uint8 x, uint8 y, const char a)
   \                     LCD_WriteChar:
    261          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 12
   \   000005   74F4         MOV     A,#-0xc
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FF           MOV     R7,A
   \   00000C   EA           MOV     A,R2
   \   00000D   FE           MOV     R6,A
   \   00000E   8B..         MOV     ?V0 + 2,R3
    262            uint8 i=0;
    263            uint16 ASCII_CODE_ADDR[2];
    264            uint8 font_buffer[8];
    265          
    266            halASCII_Searh_ADDR(a ,ASCII_CODE_ADDR);
   \   000010                ; Setup parameters for call to function halASCII_Searh_ADDR
   \   000010   85..82       MOV     DPL,?XSP + 0
   \   000013   85..83       MOV     DPH,?XSP + 1
   \   000016   AA82         MOV     R2,DPL
   \   000018   AB83         MOV     R3,DPH
   \   00001A   A9..         MOV     R1,?V0 + 2
   \   00001C   12....       LCALL   ??halASCII_Searh_ADDR?relay
    267            halGT20L_HRD_Font(ASCII_CODE_ADDR,8,font_buffer);
   \   00001F                ; Setup parameters for call to function halGT20L_HRD_Font
   \   00001F   7404         MOV     A,#0x4
   \   000021   12....       LCALL   ?XSTACK_DISP0_8
   \   000024   AC82         MOV     R4,DPL
   \   000026   AD83         MOV     R5,DPH
   \   000028   7908         MOV     R1,#0x8
   \   00002A   85..82       MOV     DPL,?XSP + 0
   \   00002D   85..83       MOV     DPH,?XSP + 1
   \   000030   AA82         MOV     R2,DPL
   \   000032   AB83         MOV     R3,DPH
   \   000034   12....       LCALL   ??halGT20L_HRD_Font?relay
    268            HalLed_SET_XY(x,y);
   \   000037                ; Setup parameters for call to function HalLed_SET_XY
   \   000037   EE           MOV     A,R6
   \   000038   FA           MOV     R2,A
   \   000039   EF           MOV     A,R7
   \   00003A   F9           MOV     R1,A
   \   00003B   12....       LCALL   ??HalLed_SET_XY?relay
    269            for(i=0;i<8;i++)
   \   00003E   75..00       MOV     ?V0 + 3,#0x0
    270            {
    271            FUNCTION_SET(font_buffer[i],DATAs);
   \                     ??LCD_WriteChar_0:
   \   000041                ; Setup parameters for call to function halOLED_control
   \   000041   7A01         MOV     R2,#0x1
   \   000043   85....       MOV     ?V0 + 0,?V0 + 3
   \   000046   7404         MOV     A,#0x4
   \   000048   12....       LCALL   ?XSTACK_DISP0_8
   \   00004B   E582         MOV     A,DPL
   \   00004D   25..         ADD     A,?V0 + 0
   \   00004F   F582         MOV     DPL,A
   \   000051   E583         MOV     A,DPH
   \   000053   3400         ADDC    A,#0x0
   \   000055   F583         MOV     DPH,A
   \   000057   E0           MOVX    A,@DPTR
   \   000058   F9           MOV     R1,A
   \   000059   12....       LCALL   ??halOLED_control?relay
    272            }
   \   00005C   05..         INC     ?V0 + 3
   \   00005E   E5..         MOV     A,?V0 + 3
   \   000060   C3           CLR     C
   \   000061   9408         SUBB    A,#0x8
   \   000063   40DC         JC      ??LCD_WriteChar_0
    273          
    274          }
   \   000065   740C         MOV     A,#0xc
   \   000067   12....       LCALL   ?DEALLOC_XSTACK8
   \   00006A   02....       LJMP    ?Subroutine2 & 0xFFFF
    275          
    276          
    277          /********************************************************************
    278           * º¯ÊýÃû³Æ£ºLCD_WriteString
    279           * ¹¦    ÄÜ£ºÔÚx¡¢yÎªÆðÊ¼×ø±ê´¦Ð´ÈëÒ»´®×Ö·û
    280           * Èë¿Ú²ÎÊý£ºx  XÖá×ø±ê£¬È¡Öµ·¶Î§£º0 - 127
    281           *           y  YÖá×ø±ê£¬È¡Öµ·¶Î§0-63
    282           *           p  ÒªÏÔÊ¾µÄ×Ö·û´®
    283           * ³ö¿Ú²ÎÊý£ºÎÞ
    284           * ·µ »Ø Öµ£ºÎÞ
    285           ********************************************************************/
    286          void LCD_WriteString(uint8 x, uint8 y, const char *p);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    287          void LCD_WriteString(uint8 x, uint8 y, const char *p)
   \                     LCD_WriteString:
    288          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 0,R1
   \   000007   8A..         MOV     ?V0 + 1,R2
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   \   00000D   800B         SJMP    ??LCD_WriteString_0
    289            while(*p != 0)
    290            {
    291              LCD_WriteChar(x, y, *p);
    292              x += 7;
    293              if(x > Dis_X_MAX)
    294              {
    295                x = Dis_Zero;
    296                if((Dis_Y_MAX - y) < Y_Witch) break;
    297                else y += 1;
   \                     ??LCD_WriteString_1:
   \   00000F   05..         INC     ?V0 + 1
    298              }
    299              p+=1;
   \                     ??LCD_WriteString_2:
   \   000011   8E82         MOV     DPL,R6
   \   000013   8F83         MOV     DPH,R7
   \   000015   A3           INC     DPTR
   \   000016   AE82         MOV     R6,DPL
   \   000018   AF83         MOV     R7,DPH
   \                     ??LCD_WriteString_0:
   \   00001A   8E82         MOV     DPL,R6
   \   00001C   8F83         MOV     DPH,R7
   \   00001E   E0           MOVX    A,@DPTR
   \   00001F   FB           MOV     R3,A
   \   000020   6025         JZ      ??LCD_WriteString_3
   \   000022                ; Setup parameters for call to function LCD_WriteChar
   \   000022   AA..         MOV     R2,?V0 + 1
   \   000024   A9..         MOV     R1,?V0 + 0
   \   000026   12....       LCALL   ??LCD_WriteChar?relay
   \   000029   7407         MOV     A,#0x7
   \   00002B   25..         ADD     A,?V0 + 0
   \   00002D   F5..         MOV     ?V0 + 0,A
   \   00002F   C3           CLR     C
   \   000030   9480         SUBB    A,#-0x80
   \   000032   40DD         JC      ??LCD_WriteString_2
   \   000034   90....       MOV     DPTR,#Dis_Zero
   \   000037   E0           MOVX    A,@DPTR
   \   000038   F5..         MOV     ?V0 + 0,A
   \   00003A   85....       MOV     ?V0 + 2,?V0 + 1
   \   00003D   7407         MOV     A,#0x7
   \   00003F   C3           CLR     C
   \   000040   95..         SUBB    A,?V0 + 2
   \   000042   12....       LCALL   ?Subroutine5 & 0xFFFF
    300            }
   \                     ??CrossCallReturnLabel_3:
   \   000045   50C8         JNC     ??LCD_WriteString_1
    301          }
   \                     ??LCD_WriteString_3:
   \   000047   02....       LJMP    ?Subroutine2 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   F8           MOV     R0,A
   \   000001   E4           CLR     A
   \   000002   9400         SUBB    A,#0x0
   \   000004   F9           MOV     R1,A
   \   000005   90....       MOV     DPTR,#Y_Witch
   \   000008   E0           MOVX    A,@DPTR
   \   000009   FA           MOV     R2,A
   \   00000A   C3           CLR     C
   \   00000B   E8           MOV     A,R0
   \   00000C   9A           SUBB    A,R2
   \   00000D   E9           MOV     A,R1
   \   00000E   9400         SUBB    A,#0x0
   \   000010   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000012   65D0         XRL     A,PSW
   \   000014   33           RLC     A
   \   000015   22           RET
    302          
    303          /********************************************************************
    304           * º¯ÊýÃû³Æ£ºLCD_WriteStringL
    305           * ¹¦    ÄÜ£ºÔÚx¡¢yÎªÆðÊ¼×ø±ê´¦Ð´ÈëÒ»´®×Ö·û
    306           * Èë¿Ú²ÎÊý£ºx  XÖá×ø±ê£¬È¡Öµ·¶Î§£º0 - 127
    307           *           y  YÖá×ø±ê£¬È¡Öµ·¶Î§0-63
    308           *           p  ÒªÏÔÊ¾µÄ×Ö·û´®
    309           *           l  ÒªÏÔÊ¾µÄ×Ö·û´®³¤¶È
    310           * ³ö¿Ú²ÎÊý£ºÎÞ
    311           * ·µ »Ø Öµ£ºÎÞ
    312           ********************************************************************/
    313          void LCD_WriteStringL(uint8 x, uint8 y, const char *p ,uint16 l);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    314          void LCD_WriteStringL(uint8 x, uint8 y, const char *p ,uint16 l)
   \                     LCD_WriteStringL:
    315          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 2,R1
   \   000007   8A..         MOV     ?V0 + 3,R2
   \   000009   EC           MOV     A,R4
   \   00000A   FE           MOV     R6,A
   \   00000B   ED           MOV     A,R5
   \   00000C   FF           MOV     R7,A
   \   00000D   740E         MOV     A,#0xe
   \   00000F   12....       LCALL   ?XSTACK_DISP0_8
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 0,A
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   8015         SJMP    ??LCD_WriteStringL_0
    316            while(l != 0)
    317            {
    318              LCD_WriteChar(x, y, *p);
    319              x += 7;
    320              if(x > Dis_X_MAX)
    321              {
    322                x = Dis_Zero;
    323                if((Dis_Y_MAX - y) < Y_Witch) break;
    324                else y += 1;
   \                     ??LCD_WriteStringL_1:
   \   000019   05..         INC     ?V0 + 3
    325              }
    326              p+=1;
   \                     ??LCD_WriteStringL_2:
   \   00001B   8E82         MOV     DPL,R6
   \   00001D   8F83         MOV     DPH,R7
   \   00001F   A3           INC     DPTR
   \   000020   AE82         MOV     R6,DPL
   \   000022   AF83         MOV     R7,DPH
    327              l-=1;
   \   000024   E5..         MOV     A,?V0 + 0
   \   000026   24FF         ADD     A,#-0x1
   \   000028   F5..         MOV     ?V0 + 0,A
   \   00002A   E5..         MOV     A,?V0 + 1
   \   00002C   34FF         ADDC    A,#-0x1
   \                     ??LCD_WriteStringL_0:
   \   00002E   F5..         MOV     ?V0 + 1,A
   \   000030   E5..         MOV     A,?V0 + 0
   \   000032   7002         JNZ     ??LCD_WriteStringL_3
   \   000034   E5..         MOV     A,?V0 + 1
   \                     ??LCD_WriteStringL_3:
   \   000036   602B         JZ      ??LCD_WriteStringL_4
   \   000038                ; Setup parameters for call to function LCD_WriteChar
   \   000038   8E82         MOV     DPL,R6
   \   00003A   8F83         MOV     DPH,R7
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   FB           MOV     R3,A
   \   00003E   AA..         MOV     R2,?V0 + 3
   \   000040   A9..         MOV     R1,?V0 + 2
   \   000042   12....       LCALL   ??LCD_WriteChar?relay
   \   000045   7407         MOV     A,#0x7
   \   000047   25..         ADD     A,?V0 + 2
   \   000049   F5..         MOV     ?V0 + 2,A
   \   00004B   C3           CLR     C
   \   00004C   9480         SUBB    A,#-0x80
   \   00004E   40CB         JC      ??LCD_WriteStringL_2
   \   000050   90....       MOV     DPTR,#Dis_Zero
   \   000053   E0           MOVX    A,@DPTR
   \   000054   F5..         MOV     ?V0 + 2,A
   \   000056   85....       MOV     ?V0 + 4,?V0 + 3
   \   000059   7407         MOV     A,#0x7
   \   00005B   C3           CLR     C
   \   00005C   95..         SUBB    A,?V0 + 4
   \   00005E   12....       LCALL   ?Subroutine5 & 0xFFFF
    328            }
   \                     ??CrossCallReturnLabel_4:
   \   000061   50B6         JNC     ??LCD_WriteStringL_1
    329          }
   \                     ??LCD_WriteStringL_4:
   \   000063   7F06         MOV     R7,#0x6
   \   000065   02....       LJMP    ?BANKED_LEAVE_XDATA
    330          
    331          
    332          
    333          /********************************************************************
    334           * º¯ÊýÃû³Æ£ºLCD_SetBackLight
    335           * ¹¦    ÄÜ£ºÉèÖÃ±³¹âÁÁ¶ÈµÈ¼¶
    336           * Èë¿Ú²ÎÊý£ºDeg  ÁÁ¶ÈµÈ¼¶0~127
    337           * ³ö¿Ú²ÎÊý£ºÎÞ
    338           * ·µ »Ø Öµ£ºÎÞ
    339           ********************************************************************/
    340          void LCD_SetBackLight(uint8 Deg);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    341          void LCD_SetBackLight(uint8 Deg)
   \                     LCD_SetBackLight:
    342          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    343            GT20L_SPI(1);                                // enable device
   \   000007                ; Setup parameters for call to function GT20L_SPI
   \   000007   7901         MOV     R1,#0x1
   \   000009   12....       LCALL   ??GT20L_SPI?relay
    344            HalGT20L_TX_CMD(0x81);
   \   00000C                ; Setup parameters for call to function LCD_SPISendDatas
   \   00000C   7981         MOV     R1,#-0x7f
   \   00000E   12....       LCALL   ??LCD_SPISendDatas?relay
    345            LCD_SPISendDatas(Deg);	   //±³¹âÉèÖÃÁÁ¶ÈÖµ
   \   000011                ; Setup parameters for call to function LCD_SPISendDatas
   \   000011   EE           MOV     A,R6
   \   000012   F9           MOV     R1,A
   \   000013   12....       LCALL   ??LCD_SPISendDatas?relay
    346            GT20L_SPI(0);
   \   000016                ; Setup parameters for call to function GT20L_SPI
   \   000016   7900         MOV     R1,#0x0
   \   000018   12....       LCALL   ??GT20L_SPI?relay
    347          }
   \   00001B   02....       LJMP    ?Subroutine1 & 0xFFFF
    348          
    349          
    350          /*********************************************************************
    351           * º¯ÊýÃû³Æ£ºLCD_Clear
    352           * ¹¦    ÄÜ£ºLCDÇåÆÁ
    353           * Èë¿Ú²ÎÊý£ºÎÞ
    354           * ³ö¿Ú²ÎÊý£ºÎÞ
    355           * ·µ »Ø Öµ£ºÎÞ
    356          
    357           ********************************************************************/
    358          void LCD_Clear(void);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    359          void LCD_Clear(void)
   \                     LCD_Clear:
    360          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    361            uint8 i,j;
    362            //ÇåÆÁ²Ù×÷
    363            FUNCTION_SET(0x22,COMMAND);
   \   000005                ; Setup parameters for call to function halOLED_control
   \   000005   7A00         MOV     R2,#0x0
   \   000007   7922         MOV     R1,#0x22
   \   000009   12....       LCALL   ?Subroutine3 & 0xFFFF
    364            FUNCTION_SET(0,COMMAND);
    365            FUNCTION_SET(7,COMMAND);
   \                     ??CrossCallReturnLabel_0:
   \   00000C   12....       LCALL   ?Subroutine4 & 0xFFFF
    366            FUNCTION_SET(0x21,COMMAND);
   \                     ??CrossCallReturnLabel_10:
   \   00000F   7921         MOV     R1,#0x21
   \   000011   12....       LCALL   ?Subroutine3 & 0xFFFF
    367            FUNCTION_SET(0,COMMAND);
    368            FUNCTION_SET(127,COMMAND);
   \                     ??CrossCallReturnLabel_1:
   \   000014   797F         MOV     R1,#0x7f
   \   000016   12....       LCALL   ??halOLED_control?relay
    369          
    370            for(i=0;i<8;i++)
   \   000019   7F08         MOV     R7,#0x8
    371            {
    372              for(j=0;j<128;j++)
   \                     ??LCD_Clear_0:
   \   00001B   7E80         MOV     R6,#-0x80
    373                FUNCTION_SET(0x00,DATAs);
   \                     ??LCD_Clear_1:
   \   00001D                ; Setup parameters for call to function halOLED_control
   \   00001D   7A01         MOV     R2,#0x1
   \   00001F   7900         MOV     R1,#0x0
   \   000021   12....       LCALL   ??halOLED_control?relay
   \   000024   1E           DEC     R6
   \   000025   EE           MOV     A,R6
   \   000026   70F5         JNZ     ??LCD_Clear_1
    374            }
   \   000028   1F           DEC     R7
   \   000029   EF           MOV     A,R7
   \   00002A   70EF         JNZ     ??LCD_Clear_0
    375          }
   \   00002C   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ??halOLED_control?relay
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003                ; Setup parameters for call to function halOLED_control
   \   000003   7A00         MOV     R2,#0x0
   \   000005   7900         MOV     R1,#0x0
   \   000007   12....       LCALL   ??halOLED_control?relay
   \   00000A                ; Setup parameters for call to function halOLED_control
   \   00000A                ; Setup parameters for call to function halOLED_control
   \   00000A                ; Setup parameters for call to function halOLED_control
   \   00000A   7A00         MOV     R2,#0x0
   \   00000C   22           RET
    376          
    377          
    378          
    379          /*********************************************************************
    380           * º¯ÊýÃû³Æ£ºLCD_Init
    381           * ¹¦    ÄÜ£ºLCD³õÊ¼»¯
    382           * Èë¿Ú²ÎÊý£ºÎÞ
    383           * ³ö¿Ú²ÎÊý£ºÎÞ
    384           * ·µ »Ø Öµ£ºÎÞ
    385           ********************************************************************/
    386          void LCD_Init(void);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    387          void LCD_Init(void)
   \                     LCD_Init:
    388          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    389            P0DIR |= (0x01<<0);  // P0.0ÎªÊä³ö
   \   000004   43FD01       ORL     0xfd,#0x1
    390            P1DIR |= (0x01<<2);  // P1.2ÎªÊä³ö
   \   000007   43FE04       ORL     0xfe,#0x4
    391            P1DIR |= (0x01<<5);  // P1.5ÎªÊä³ö
   \   00000A   43FE20       ORL     0xfe,#0x20
    392            P1DIR |= (0x01<<6);  // P1.6ÎªÊä³ö
   \   00000D   43FE40       ORL     0xfe,#0x40
    393          
    394            P1DIR &= (0X7F);  // P1.7ÎªÊäÈë
   \   000010   53FE7F       ANL     0xfe,#0x7f
    395            P2DIR |= (0x01<<1);  // P2.1ÎªÊä³ö
   \   000013   43FF02       ORL     0xff,#0x2
    396            P2DIR |= (0x01<<2);  // P2.2ÎªÊä³ö
   \   000016   43FF04       ORL     0xff,#0x4
    397          
    398            /* ¸´Î»LCD */
    399            L_LCD_RESETn();
   \   000019   C280         CLR     0x80.0
    400            LCD_TimeDelay(3000);
   \   00001B                ; Setup parameters for call to function LCD_TimeDelay
   \   00001B   7AB8         MOV     R2,#-0x48
   \   00001D   7B0B         MOV     R3,#0xb
   \   00001F   12....       LCALL   ??LCD_TimeDelay?relay
    401            H_LCD_RESETn();
   \   000022   D280         SETB    0x80.0
    402            LCD_TimeDelay(3000);
   \   000024                ; Setup parameters for call to function LCD_TimeDelay
   \   000024   7AB8         MOV     R2,#-0x48
   \   000026   7B0B         MOV     R3,#0xb
   \   000028   12....       LCALL   ??LCD_TimeDelay?relay
    403          
    404            //Charge Pump Setting
    405            FUNCTION_SET(0x8d,COMMAND);
   \   00002B                ; Setup parameters for call to function halOLED_control
   \   00002B   7A00         MOV     R2,#0x0
   \   00002D   798D         MOV     R1,#-0x73
   \   00002F   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    406            FUNCTION_SET(0x14,COMMAND);
   \                     ??CrossCallReturnLabel_15:
   \   000032   7914         MOV     R1,#0x14
   \   000034   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    407            FUNCTION_SET(0xaf,COMMAND);
   \                     ??CrossCallReturnLabel_16:
   \   000037   79AF         MOV     R1,#-0x51
   \   000039   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    408            //Set Display Clock
    409            FUNCTION_SET(0xD5,COMMAND);
   \                     ??CrossCallReturnLabel_17:
   \   00003C   79D5         MOV     R1,#-0x2b
   \   00003E   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    410            FUNCTION_SET(0xF0,COMMAND);
   \                     ??CrossCallReturnLabel_18:
   \   000041   79F0         MOV     R1,#-0x10
   \   000043   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    411            //Set Pre-charge Period
    412            FUNCTION_SET(0xD9,COMMAND);
   \                     ??CrossCallReturnLabel_19:
   \   000046   79D9         MOV     R1,#-0x27
   \   000048   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    413            FUNCTION_SET(0x11,COMMAND);
   \                     ??CrossCallReturnLabel_20:
   \   00004B   7911         MOV     R1,#0x11
   \   00004D   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    414            //Set VCOMH Deselect Level
    415            FUNCTION_SET(0xDb,COMMAND);
   \                     ??CrossCallReturnLabel_21:
   \   000050   79DB         MOV     R1,#-0x25
   \   000052   12....       LCALL   ?Subroutine3 & 0xFFFF
    416            FUNCTION_SET(0x0,COMMAND);
    417            //Set Norma Display
    418            FUNCTION_SET(0xa6,COMMAND);
   \                     ??CrossCallReturnLabel_2:
   \   000055   79A6         MOV     R1,#-0x5a
   \   000057   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    419            //Entire Display ON
    420            //FUNCTION_SET(0xa5,COMMAND);
    421            //Set Contrast Control
    422            FUNCTION_SET(0x81,COMMAND);
   \                     ??CrossCallReturnLabel_22:
   \   00005A   7981         MOV     R1,#-0x7f
   \   00005C   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    423            FUNCTION_SET(0xff,COMMAND);  //1-256
   \                     ??CrossCallReturnLabel_23:
   \   00005F   79FF         MOV     R1,#-0x1
   \   000061   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    424            //Set Segment Re-map
    425            FUNCTION_SET(0xa1,COMMAND);
   \                     ??CrossCallReturnLabel_24:
   \   000064   79A1         MOV     R1,#-0x5f
   \   000066   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    426            //Set COM Output Scan Direction
    427            FUNCTION_SET(0xc8,COMMAND);
   \                     ??CrossCallReturnLabel_25:
   \   000069   79C8         MOV     R1,#-0x38
   \   00006B   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    428            //Set Memory Addressing Mode
    429            FUNCTION_SET(0x20,COMMAND);
   \                     ??CrossCallReturnLabel_26:
   \   00006E   7920         MOV     R1,#0x20
   \   000070   12....       LCALL   ??Subroutine8_0 & 0xFFFF
    430            FUNCTION_SET(0x00,COMMAND);
   \                     ??CrossCallReturnLabel_27:
   \   000073   7900         MOV     R1,#0x0
   \   000075   12....       LCALL   ??halOLED_control?relay
    431            LCD_SetBackLight(100); // µ÷½Ú±³¹âÁÁ¶È
   \   000078                ; Setup parameters for call to function LCD_SetBackLight
   \   000078   7964         MOV     R1,#0x64
   \   00007A   12....       LCALL   ??LCD_SetBackLight?relay
    432          }
   \   00007D   D083         POP     DPH
   \   00007F   D082         POP     DPL
   \   000081   02....       LJMP    ?BRET
   \   000084                REQUIRE _A_P0
   \   000084                REQUIRE P0DIR
   \   000084                REQUIRE P1DIR
   \   000084                REQUIRE P2DIR

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   A3           INC     DPTR
   \   000001   E0           MOVX    A,@DPTR
   \   000002   F9           MOV     R1,A
   \   000003   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_8:
   \   000006   22           RET

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for X_Witch>`:
   \   000000   06           DB 6

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for Y_Witch>`:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for X_Witch_cn>`:
   \   000000   10           DB 16

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for Y_Witch_cn>`:
   \   000000   10           DB 16

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_TimeDelay?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_TimeDelay

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_SPISSSet?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_SPISSSet

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_SPI_DC?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_SPI_DC

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GT20L_SPI?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GT20L_SPI

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_SPISendDatas?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_SPISendDatas

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halOLED_control?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halOLED_control

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalLed_SET_XY?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalLed_SET_XY

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalGT20L_TX_CMD?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalGT20L_TX_CMD

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halGT20L_HRD_Font?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halGT20L_HRD_Font

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??halASCII_Searh_ADDR?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    halASCII_Searh_ADDR

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_WriteChar?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_WriteChar

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_WriteString?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_WriteString

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_WriteStringL?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_WriteStringL

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_SetBackLight?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_SetBackLight

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_Clear?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_Clear

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??LCD_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    LCD_Init
    433          
    434          
    435          
    436          
    437          

   Maximum stack usage in bytes:

     Function                 ISTACK PSTACK XSTACK
     --------                 ------ ------ ------
     GT20L_SPI                    0      0     12
     HalGT20L_TX_CMD              0      0      9
       -> LCD_SPISendDatas        0      0     18
     HalLed_SET_XY                0      0     33
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
     LCD_Clear                    0      0      9
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
       -> halOLED_control         0      0     18
     LCD_Init                     2      0      0
       -> LCD_TimeDelay           4      0      0
       -> LCD_TimeDelay           4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> halOLED_control         4      0      0
       -> LCD_SetBackLight        4      0      0
     LCD_SPISSSet                 0      0      9
     LCD_SPISendDatas             2      0     12
     LCD_SPI_DC                   0      0      9
     LCD_SetBackLight             0      0      9
       -> GT20L_SPI               0      0     18
       -> LCD_SPISendDatas        0      0     18
       -> LCD_SPISendDatas        0      0     18
       -> GT20L_SPI               0      0     18
     LCD_TimeDelay                0      0      0
     LCD_WriteChar                0      0     38
       -> halASCII_Searh_ADDR     0      0     48
       -> halGT20L_HRD_Font       0      0     48
       -> HalLed_SET_XY           0      0     48
       -> halOLED_control         0      0     48
     LCD_WriteString              0      0     12
       -> LCD_WriteChar           0      0     24
     LCD_WriteStringL             0      0     16
       -> LCD_WriteChar           0      0     28
     halASCII_Searh_ADDR          0      0     34
     halGT20L_HRD_Font            1      0     36
       -> GT20L_SPI               0      0     24
       -> LCD_SPISendDatas        0      0     24
       -> LCD_SPISendDatas        0      0     24
       -> LCD_SPISendDatas        0      0     24
       -> LCD_SPISendDatas        0      0     24
       -> LCD_SPISendDatas        0      0     24
       -> LCD_SPISendDatas        0      0     24
       -> GT20L_SPI               0      0     24
     halOLED_control              0      0     33
       -> LCD_SPISSSet            0      0     18
       -> LCD_SPI_DC              0      0     18
       -> LCD_SPI_DC              0      0     18
       -> LCD_SPISendDatas        0      0     18
       -> LCD_SPI_DC              0      0     18
       -> LCD_SPISSSet            0      0     18


   Segment part sizes:

     Function/Label                Bytes
     --------------                -----
     _A_P0                            1
     _A_P1                            1
     _A_P2                            1
     P0DIR                            1
     P1DIR                            1
     P2DIR                            1
     X_Witch                          1
     Y_Witch                          1
     X_Witch_cn                       1
     Y_Witch_cn                       1
     Dis_Zero                         1
     LCD_TimeDelay                   25
     LCD_SPISSSet                    12
     ?Subroutine0                     7
     LCD_SPI_DC                      14
     GT20L_SPI                       14
     LCD_SPISendDatas                96
     halOLED_control                 43
     ?Subroutine1                     5
     HalLed_SET_XY                   41
     ?Subroutine4                     2
     ??Subroutine8_0                  6
     HalGT20L_TX_CMD                  8
     halGT20L_HRD_Font               81
     ?Subroutine2                     5
     ?Subroutine7                    10
     halASCII_Searh_ADDR             53
     LCD_WriteChar                  109
     LCD_WriteString                 74
     ?Subroutine5                    22
     LCD_WriteStringL               104
     LCD_SetBackLight                30
     LCD_Clear                       47
     ?Subroutine3                    13
     LCD_Init                       132
     ?Subroutine6                     7
     ?<Initializer for X_Witch>       1
     ?<Initializer for Y_Witch>       1
     ?<Initializer for X_Witch_cn>    1
     ?<Initializer for Y_Witch_cn>    1
     ??LCD_TimeDelay?relay            6
     ??LCD_SPISSSet?relay             6
     ??LCD_SPI_DC?relay               6
     ??GT20L_SPI?relay                6
     ??LCD_SPISendDatas?relay         6
     ??halOLED_control?relay          6
     ??HalLed_SET_XY?relay            6
     ??HalGT20L_TX_CMD?relay          6
     ??halGT20L_HRD_Font?relay        6
     ??halASCII_Searh_ADDR?relay      6
     ??LCD_WriteChar?relay            6
     ??LCD_WriteString?relay          6
     ??LCD_WriteStringL?relay         6
     ??LCD_SetBackLight?relay         6
     ??LCD_Clear?relay                6
     ??LCD_Init?relay                 6

 
 960 bytes in segment BANKED_CODE
  96 bytes in segment BANK_RELAYS
   6 bytes in segment SFR_AN
   4 bytes in segment XDATA_I
   4 bytes in segment XDATA_ID
   1 byte  in segment XDATA_Z
 
 1 060 bytes of CODE  memory
     0 bytes of DATA  memory (+ 6 bytes shared)
     5 bytes of XDATA memory

Errors: none
Warnings: none
